{"ast":null,"code":"import _regeneratorRuntime from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/utkarsh/study2/proj/DigiVote/client/src/Elections/SingleElection.jsx\";\nimport React, { Component } from 'react';\nimport AadhaarData from '../Verification/AdhaarData';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CandiateCard from '../Elections/CandidateCard';\nimport '../index.css';\nimport { Modal } from '@material-ui/core';\n\nvar SendOtp = require('sendotp');\n\nvar SingleElection = /*#__PURE__*/function (_Component) {\n  _inherits(SingleElection, _Component);\n\n  function SingleElection(props) {\n    var _this;\n\n    _classCallCheck(this, SingleElection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SingleElection).call(this, props));\n\n    _this.componentWillMount = function () {\n      _this.setState({\n        loaderStart: true\n      });\n\n      var UpdateVotingInterval = setInterval(_this.updateVotingTime, 5000);\n      var UpdateResultInterval = setInterval(_this.updateResultDate, 5000);\n      var UpdateCRInterval = setInterval(_this.updateCRTime, 5000); // const UpdateAlertInterval = setInterval(this.updateAlertMsg, 180000) //this interval should run only in voting time period\n      // this.setState({\n      //     UpdateAlertInterval\n      // })\n      // console.log(\"voting interval\")\n\n      _this.setState({\n        UpdateVotingInterval: UpdateVotingInterval,\n        UpdateResultInterval: UpdateResultInterval,\n        UpdateCRInterval: UpdateCRInterval,\n        loaderStart: false // UpdateAlertInterval\n\n      });\n    };\n\n    _this.checkCandidates = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var contract, length, showCandidates, i, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loaderStart: true\n              });\n\n              if (!_this.state.isShow) {\n                _context.next = 5;\n                break;\n              }\n\n              _this.setState({\n                isShow: false\n              });\n\n              _context.next = 24;\n              break;\n\n            case 5:\n              contract = _this.props.userObject.contract;\n              length = 0;\n              showCandidates = [];\n              _context.next = 10;\n              return contract.methods.countElectionCandidates(_this.props.electionHash[_this.props.index]).call().then(function (res) {\n                return length = res;\n              }).catch(console.error);\n\n            case 10:\n              if (!(length - 1 != 0)) {\n                _context.next = 22;\n                break;\n              }\n\n              i = 0;\n\n            case 12:\n              if (!(i < length)) {\n                _context.next = 20;\n                break;\n              }\n\n              result = \"\";\n              _context.next = 16;\n              return contract.methods.getSelectedCandidates(_this.props.electionHash[_this.props.index], i).call().then(function (res) {\n                return result = res;\n              }).catch(console.error);\n\n            case 16:\n              showCandidates.push(result);\n\n            case 17:\n              i++;\n              _context.next = 12;\n              break;\n\n            case 20:\n              _context.next = 23;\n              break;\n\n            case 22:\n              showCandidates = [[\"Candidates are not Nominated yet\", 0]]; //console.log(\"ye aana chahiye\")\n\n            case 23:\n              _this.setState({\n                showCandidates: showCandidates,\n                isShow: true,\n                candidateCount: length - 1,\n                loaderStart: false,\n                isCardClicked: true\n              });\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.goToVote = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var contract, TotalVoters, selectedElection;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.setState({\n                loaderStart: true\n              });\n\n              console.log(\"move to Voting Home\");\n              contract = _this.props.userObject.contract;\n              TotalVoters = 0;\n              _context2.next = 6;\n              return contract.methods.aadhaarCount(_this.props.electionHash[_this.props.index]).call().then(function (res) {\n                return TotalVoters = res;\n              }).catch(console.error);\n\n            case 6:\n              console.log(TotalVoters); //condition for checking that all thr voter are voted or not \n\n              if (TotalVoters < _this.props.item.TotalVoters) {\n                selectedElection = {\n                  electionHash: _this.props.electionHash[_this.props.index],\n                  election: _this.props.item,\n                  candidates: _this.state.showCandidates\n                };\n\n                _this.setState({\n                  loaderStart: false\n                });\n\n                _this.props.updateHomeState(3, selectedElection);\n              } else {\n                _this.setState({\n                  loaderStart: false\n                });\n\n                console.log(\"Total Voter count exceeds\");\n                alert(\"All Voters are already Voted!\");\n              }\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    _this.openResult = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var contract, length, showCandidates, i, result, selectedElection;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this.setState({\n                loaderStart: true\n              });\n\n              contract = _this.props.userObject.contract;\n              length = 0;\n              showCandidates = [];\n              _context3.next = 6;\n              return contract.methods.countElectionCandidates(_this.props.electionHash[_this.props.index]).call().then(function (res) {\n                return length = res;\n              }).catch(console.error);\n\n            case 6:\n              if (!(length != 0)) {\n                _context3.next = 18;\n                break;\n              }\n\n              i = 0;\n\n            case 8:\n              if (!(i < length)) {\n                _context3.next = 16;\n                break;\n              }\n\n              result = \"\";\n              _context3.next = 12;\n              return contract.methods.getSelectedCandidates(_this.props.electionHash[_this.props.index], i).call().then(function (res) {\n                return result = res;\n              }).catch(console.error);\n\n            case 12:\n              showCandidates.push(result);\n\n            case 13:\n              i++;\n              _context3.next = 8;\n              break;\n\n            case 16:\n              _context3.next = 19;\n              break;\n\n            case 18:\n              showCandidates = \"Candidates are not Nominated yet\";\n\n            case 19:\n              selectedElection = {\n                electionHash: _this.props.electionHash[_this.props.index],\n                election: _this.props.item,\n                candidates: showCandidates\n              };\n\n              _this.setState({\n                loaderStart: false\n              });\n\n              _this.props.updateHomeState(4, selectedElection);\n\n            case 22:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    _this.openPreReport = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var contract, length, showCandidates, i, result, selectedElection;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _this.setState({\n                loaderStart: true\n              });\n\n              contract = _this.props.userObject.contract;\n              length = 0;\n              showCandidates = [];\n              _context4.next = 6;\n              return contract.methods.countElectionCandidates(_this.props.electionHash[_this.props.index]).call().then(function (res) {\n                return length = res;\n              }).catch(console.error);\n\n            case 6:\n              if (!(length != 0)) {\n                _context4.next = 18;\n                break;\n              }\n\n              i = 0;\n\n            case 8:\n              if (!(i < length)) {\n                _context4.next = 16;\n                break;\n              }\n\n              result = \"\";\n              _context4.next = 12;\n              return contract.methods.getSelectedCandidates(_this.props.electionHash[_this.props.index], i).call().then(function (res) {\n                return result = res;\n              }).catch(console.error);\n\n            case 12:\n              showCandidates.push(result);\n\n            case 13:\n              i++;\n              _context4.next = 8;\n              break;\n\n            case 16:\n              _context4.next = 19;\n              break;\n\n            case 18:\n              showCandidates = \"Candidates are not Nominated yet\";\n\n            case 19:\n              selectedElection = {\n                electionHash: _this.props.electionHash[_this.props.index],\n                election: _this.props.item,\n                candidates: showCandidates\n              }; //console.log(selectedElection.candidates[0])\n\n              _this.setState({\n                loaderStart: false\n              });\n\n              _this.props.updateHomeState(5, selectedElection);\n\n            case 22:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    _this.openPostReport = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var contract, length, showCandidates, i, result, selectedElection;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _this.setState({\n                loaderStart: true\n              });\n\n              contract = _this.props.userObject.contract;\n              length = 0;\n              showCandidates = [];\n              _context5.next = 6;\n              return contract.methods.countElectionCandidates(_this.props.electionHash[_this.props.index]).call().then(function (res) {\n                return length = res;\n              }).catch(console.error);\n\n            case 6:\n              if (!(length != 0)) {\n                _context5.next = 18;\n                break;\n              }\n\n              i = 0;\n\n            case 8:\n              if (!(i < length)) {\n                _context5.next = 16;\n                break;\n              }\n\n              result = \"\";\n              _context5.next = 12;\n              return contract.methods.getSelectedCandidates(_this.props.electionHash[_this.props.index], i).call().then(function (res) {\n                return result = res;\n              }).catch(console.error);\n\n            case 12:\n              showCandidates.push(result);\n\n            case 13:\n              i++;\n              _context5.next = 8;\n              break;\n\n            case 16:\n              _context5.next = 19;\n              break;\n\n            case 18:\n              showCandidates = \"Candidates are not Nominated yet\";\n\n            case 19:\n              selectedElection = {\n                electionHash: _this.props.electionHash[_this.props.index],\n                election: _this.props.item,\n                candidates: showCandidates\n              }; //console.log(selectedElection.candidates[0])\n\n              _this.setState({\n                loaderStart: false\n              });\n\n              _this.props.updateHomeState(6, selectedElection);\n\n            case 22:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    _this.updateVotingTime = function () {\n      console.log(\"Voting Interval is running\");\n      var ElectionStartDateNTime = new Date(_this.props.item.electionStartDateNTime);\n      var ElectionEndDateNTime = new Date(_this.props.item.electionEndDateNTime);\n\n      if (new Date() >= ElectionEndDateNTime) {\n        clearInterval(_this.state.UpdateVotingInterval);\n\n        _this.props.updateLiveElections(_this.props.item, 0);\n\n        _this.setState({\n          isVotingTime: false,\n          isVotingOver: true\n        });\n      }\n\n      if (new Date() >= ElectionStartDateNTime && new Date() <= ElectionEndDateNTime) {\n        _this.props.updateLiveElections(_this.props.item, 1);\n\n        _this.setState({\n          isVotingTime: true,\n          isVotingOver: false\n        });\n      } else {\n        _this.setState({\n          isVotingTime: false\n        });\n      }\n    };\n\n    _this.updateResultDate = function () {\n      console.log(\"Result Interval is running\");\n      var ResultDate = new Date(_this.props.item.resultDate);\n\n      if (new Date() >= ResultDate) {\n        _this.props.updateOtherElections(_this.props.item, 1);\n\n        _this.setState({\n          isResultTime: true\n        });\n\n        clearInterval(_this.state.UpdateResultInterval);\n      } else {\n        _this.setState({\n          isResultTime: false\n        });\n      }\n    };\n\n    _this.updateCRTime = function () {\n      console.log(\"Candidate Interval is running\");\n      var RegistrationStartDateNTime = new Date(_this.props.item.ICRD);\n      var RegistrationEndDateNTime = new Date(_this.props.item.FCRD);\n\n      if (new Date() >= RegistrationEndDateNTime) {\n        clearInterval(_this.state.UpdateCRInterval);\n\n        _this.props.updateCRElections(_this.props.item, 0); // this.setState({\n        //     isVotingTime : false,\n        //     isVotingOver : true\n        // })\n\n      }\n\n      if (new Date() >= RegistrationStartDateNTime && new Date() <= RegistrationEndDateNTime) {\n        _this.props.updateCRElections(_this.props.item, 1); // this.setState({\n        //     isVotingTime : true\n        // })\n\n      } else {// this.setState({\n          //     isVotingTime : false\n          // })\n        }\n    };\n\n    _this.componentWillUnmount = function () {\n      clearInterval(_this.state.UpdateVotingInterval);\n      clearInterval(_this.state.UpdateResultInterval);\n      clearInterval(_this.state.UpdateCRInterval);\n      clearInterval(_this.state.UpdateAlertInterval);\n    };\n\n    _this.updateAlertMsg = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var contract, length, votedAadhaar, nonVotedAadhaar, i, aadhaar;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!_this.state.isVotingTime) {\n                _context6.next = 22;\n                break;\n              }\n\n              console.log(AadhaarData);\n              contract = _this.props.userObject.contract;\n              length = 0, votedAadhaar = [], nonVotedAadhaar = []; //array of aadhaar that not voted in this election yet\n\n              _context6.next = 6;\n              return contract.methods.aadhaarCount(_this.props.electionHash[_this.props.index]).call().then(function (res) {\n                return length = res;\n              }).catch(console.log);\n\n            case 6:\n              i = 0;\n\n            case 7:\n              if (!(i < length)) {\n                _context6.next = 15;\n                break;\n              }\n\n              aadhaar = void 0;\n              _context6.next = 11;\n              return contract.methods.checkAadhaar(_this.props.electionHash[_this.props.index], i).call().then(function (res) {\n                return aadhaar = res;\n              }).catch(console.log);\n\n            case 11:\n              votedAadhaar.push(aadhaar);\n\n            case 12:\n              i++;\n              _context6.next = 7;\n              break;\n\n            case 15:\n              AadhaarData.AadhaarCards.forEach(function (aadhaar1) {\n                var count = 0;\n                votedAadhaar.forEach(function (aadhaar2) {\n                  if (aadhaar1.Aadhaar_Id == aadhaar2) {\n                    count++;\n                  }\n                });\n\n                if (count == 0) {\n                  nonVotedAadhaar.push(aadhaar1);\n                }\n              });\n              nonVotedAadhaar.forEach(function (aadhaar) {\n                _this.alertVoter(aadhaar.Aadhaar_Id.substring(6, 12), aadhaar.e_Kyc.Poi.mobile).then(console.log).catch(console.error);\n              });\n              console.log(nonVotedAadhaar);\n              console.log(votedAadhaar);\n              console.log(\"Alert the voters\");\n              _context6.next = 23;\n              break;\n\n            case 22:\n              console.log(\"VOting time is over\");\n\n            case 23:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    _this.alertVoter = function (Aadhaar, mobile) {\n      var sendOtp = new SendOtp('269401AbIEOvkX5c9a54d1', 'Hii, ******{{otp}} Go & Vote, Only few Hours are remaining in Election Voting');\n      return new Promise(function (resolve, reject) {\n        sendOtp.send(\"91\" + mobile, \"DigiVote\", Aadhaar, function (error, data) {\n          if (data.type === \"success\") resolve(data);\n          if (error) reject(error);\n        });\n      });\n    };\n\n    _this.state = {\n      showCandidates: null,\n      isShow: false,\n      candidateCount: 0,\n      isVotingTime: false,\n      UpdateVotingInterval: null,\n      isVotingOver: false,\n      isResultTime: false,\n      UpdateResultInterval: null,\n      UpdateAlertInterval: null,\n      UpdateCRInterval: null,\n      loaderStart: false,\n      isCardClicked: false\n    };\n    return _this;\n  }\n\n  _createClass(SingleElection, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var item = this.props.item;\n      console.log(\" Voting time of \" + item.typeOfElection + \" is : \" + this.state.isVotingTime);\n      console.log(\" Result time of \" + item.typeOfElection + \" is : \" + this.state.isResultTime);\n      console.log(\" Voting Over of \" + item.typeOfElection + \" is : \" + this.state.isVotingOver);\n      var show = {\n        display: \"block\",\n        margin: \"5px\"\n      };\n      var hide = {\n        display: \"none\",\n        margin: \"5px\"\n      }; //console.log(this.state.showCandidates)\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"electionCardDiv\",\n        onClick: this.checkCandidates,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h4\",\n        className: \"ToE\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 21\n        }\n      }, item.typeOfElection), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"subtitle1\",\n        className: \"constituency\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 21\n        }\n      }, item.constituency), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"subtitle2\",\n        className: \"organizer\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"em\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 25\n        }\n      }, \"ORGANIZER    : \"), item.organizer), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"subtitle2\",\n        className: \"ESD\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"em\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 25\n        }\n      }, \"VOTING START : \"), item.electionStartDateNTime.substring(0, 24)), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"subtitle2\",\n        className: \"EED\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"em\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 25\n        }\n      }, \"VOTING END   : \"), item.electionEndDateNTime.substring(0, 24)), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"subtitle2\",\n        className: \"RD\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"em\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 25\n        }\n      }, \"RESULT DATE  : \"), item.resultDate.substring(0, 24)), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"subtitle2\",\n        className: \"TV\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"em\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 25\n        }\n      }, \"TOTAL VOTERS : \"), item.TotalVoters), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        className: \"ElectionBtn\",\n        style: this.state.isResultTime && this.state.isVotingOver ? show : hide //hide it after debugging\n        ,\n        onClick: this.openPostReport,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 29\n        }\n      }, \"Post Analysis\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        className: \"ElectionBtn\",\n        style: this.state.isResultTime ? show : hide,\n        onClick: this.openResult,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 29\n        }\n      }, \"Result\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        className: \"ElectionBtn\",\n        style: this.state.isVotingOver ? hide : show,\n        onClick: this.openPreReport,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 29\n        }\n      }, \"Pre Analysis\")), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal, {\n        \"aria-labelledby\": \"Candidate Card\",\n        \"aria-describedby\": \"Candidate Card\",\n        open: this.state.isCardClicked,\n        onClose: function onClose() {\n          return _this2.setState({\n            isCardClicked: false\n          });\n        },\n        className: \"ElectionRequestForm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CandiateCard, {\n        item: item,\n        showCandidates: this.state.showCandidates,\n        isShow: this.state.isShow,\n        candidateCount: this.state.candidateCount,\n        isVotingTime: this.state.isVotingTime,\n        goToVote: this.goToVote,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 29\n        }\n      }))));\n    }\n  }]);\n\n  return SingleElection;\n}(Component);\n\nexport { SingleElection as default };","map":{"version":3,"sources":["/home/utkarsh/study2/proj/DigiVote/client/src/Elections/SingleElection.jsx"],"names":["React","Component","AadhaarData","Grid","TextField","Button","Typography","CandiateCard","Modal","SendOtp","require","SingleElection","props","componentWillMount","setState","loaderStart","UpdateVotingInterval","setInterval","updateVotingTime","UpdateResultInterval","updateResultDate","UpdateCRInterval","updateCRTime","checkCandidates","state","isShow","contract","userObject","length","showCandidates","methods","countElectionCandidates","electionHash","index","call","then","res","catch","console","error","i","result","getSelectedCandidates","push","candidateCount","isCardClicked","goToVote","log","TotalVoters","aadhaarCount","item","selectedElection","election","candidates","updateHomeState","alert","openResult","openPreReport","openPostReport","ElectionStartDateNTime","Date","electionStartDateNTime","ElectionEndDateNTime","electionEndDateNTime","clearInterval","updateLiveElections","isVotingTime","isVotingOver","ResultDate","resultDate","updateOtherElections","isResultTime","RegistrationStartDateNTime","ICRD","RegistrationEndDateNTime","FCRD","updateCRElections","componentWillUnmount","UpdateAlertInterval","updateAlertMsg","votedAadhaar","nonVotedAadhaar","aadhaar","checkAadhaar","AadhaarCards","forEach","aadhaar1","count","aadhaar2","Aadhaar_Id","alertVoter","substring","e_Kyc","Poi","mobile","Aadhaar","sendOtp","Promise","resolve","reject","send","data","type","typeOfElection","show","display","margin","hide","constituency","organizer"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAO,cAAP;AACA,SAASC,KAAT,QAAsB,mBAAtB;;AACA,IAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;IAGqBC,c;;;AAEjB,0BAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,wFAAMA,KAAN;;AADc,UAmBlBC,kBAnBkB,GAmBG,YAAM;AAEvB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAG;AAAhB,OAAd;;AACA,UAAMC,oBAAoB,GAAGC,WAAW,CAAC,MAAKC,gBAAN,EAAwB,IAAxB,CAAxC;AAEA,UAAMC,oBAAoB,GAAGF,WAAW,CAAC,MAAKG,gBAAN,EAAwB,IAAxB,CAAxC;AAEA,UAAMC,gBAAgB,GAAGJ,WAAW,CAAC,MAAKK,YAAN,EAAoB,IAApB,CAApC,CAPuB,CASvB;AACI;AACA;AACA;AACA;;AAGJ,YAAKR,QAAL,CAAc;AACVE,QAAAA,oBAAoB,EAApBA,oBADU;AAEVG,QAAAA,oBAAoB,EAApBA,oBAFU;AAGVE,QAAAA,gBAAgB,EAAhBA,gBAHU;AAIVN,QAAAA,WAAW,EAAG,KAJJ,CAKV;;AALU,OAAd;AAOH,KA1CiB;;AAAA,UA4ClBQ,eA5CkB,yEA4CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEd,oBAAKT,QAAL,CAAc;AAAEC,gBAAAA,WAAW,EAAG;AAAhB,eAAd;;AAFc,mBAIX,MAAKS,KAAL,CAAWC,MAJA;AAAA;AAAA;AAAA;;AAKV,oBAAKX,QAAL,CAAc;AACVW,gBAAAA,MAAM,EAAG;AADC,eAAd;;AALU;AAAA;;AAAA;AAUHC,cAAAA,QAVG,GAUS,MAAKd,KAAL,CAAWe,UAVpB,CAUHD,QAVG;AAWNE,cAAAA,MAXM,GAWG,CAXH;AAYNC,cAAAA,cAZM,GAYS,EAZT;AAAA;AAAA,qBAcJH,QAAQ,CAACI,OAAT,CAAiBC,uBAAjB,CAAyC,MAAKnB,KAAL,CAAWoB,YAAX,CAAwB,MAAKpB,KAAL,CAAWqB,KAAnC,CAAzC,EAAoFC,IAApF,GACLC,IADK,CACA,UAAAC,GAAG;AAAA,uBAAIR,MAAM,GAAGQ,GAAb;AAAA,eADH,EAELC,KAFK,CAECC,OAAO,CAACC,KAFT,CAdI;;AAAA;AAAA,oBAkBNX,MAAM,GAAG,CAAV,IAAiB,CAlBV;AAAA;AAAA;AAAA;;AAoBEY,cAAAA,CApBF,GAoBI,CApBJ;;AAAA;AAAA,oBAoBOA,CAAC,GAAEZ,MApBV;AAAA;AAAA;AAAA;;AAsBEa,cAAAA,MAtBF,GAsBW,EAtBX;AAAA;AAAA,qBAuBIf,QAAQ,CAACI,OAAT,CAAiBY,qBAAjB,CAAuC,MAAK9B,KAAL,CAAWoB,YAAX,CAAwB,MAAKpB,KAAL,CAAWqB,KAAnC,CAAvC,EAAkFO,CAAlF,EAAqFN,IAArF,GACLC,IADK,CACA,UAAAC,GAAG;AAAA,uBAAIK,MAAM,GAAGL,GAAb;AAAA,eADH,EAELC,KAFK,CAECC,OAAO,CAACC,KAFT,CAvBJ;;AAAA;AA2BFV,cAAAA,cAAc,CAACc,IAAf,CAAoBF,MAApB;;AA3BE;AAoBkBD,cAAAA,CAAC,EApBnB;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAgCNX,cAAAA,cAAc,GAAG,CAAC,CAAC,kCAAD,EAAqC,CAArC,CAAD,CAAjB,CAhCM,CAiCN;;AAjCM;AAqCV,oBAAKf,QAAL,CAAc;AACVe,gBAAAA,cAAc,EAAdA,cADU;AAEVJ,gBAAAA,MAAM,EAAG,IAFC;AAGVmB,gBAAAA,cAAc,EAAGhB,MAAM,GAAG,CAHhB;AAIVb,gBAAAA,WAAW,EAAG,KAJJ;AAKV8B,gBAAAA,aAAa,EAAG;AALN,eAAd;;AArCU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA5CA;AAAA,UA+FlBC,QA/FkB,yEA+FP;AAAA;AAAA;AAAA;AAAA;AAAA;AACP,oBAAKhC,QAAL,CAAc;AAAEC,gBAAAA,WAAW,EAAG;AAAhB,eAAd;;AACAuB,cAAAA,OAAO,CAACS,GAAR,CAAY,qBAAZ;AACOrB,cAAAA,QAHA,GAGY,MAAKd,KAAL,CAAWe,UAHvB,CAGAD,QAHA;AAKHsB,cAAAA,WALG,GAKW,CALX;AAAA;AAAA,qBAMDtB,QAAQ,CAACI,OAAT,CAAiBmB,YAAjB,CAA8B,MAAKrC,KAAL,CAAWoB,YAAX,CAAwB,MAAKpB,KAAL,CAAWqB,KAAnC,CAA9B,EAAyEC,IAAzE,GACLC,IADK,CACA,UAAAC,GAAG;AAAA,uBAAIY,WAAW,GAAGZ,GAAlB;AAAA,eADH,EAELC,KAFK,CAECC,OAAO,CAACC,KAFT,CANC;;AAAA;AASPD,cAAAA,OAAO,CAACS,GAAR,CAAYC,WAAZ,EATO,CAWP;;AACA,kBAAGA,WAAW,GAAG,MAAKpC,KAAL,CAAWsC,IAAX,CAAgBF,WAAjC,EAA6C;AAErCG,gBAAAA,gBAFqC,GAElB;AACnBnB,kBAAAA,YAAY,EAAG,MAAKpB,KAAL,CAAWoB,YAAX,CAAwB,MAAKpB,KAAL,CAAWqB,KAAnC,CADI;AAEnBmB,kBAAAA,QAAQ,EAAO,MAAKxC,KAAL,CAAWsC,IAFP;AAGnBG,kBAAAA,UAAU,EAAK,MAAK7B,KAAL,CAAWK;AAHP,iBAFkB;;AAQzC,sBAAKf,QAAL,CAAc;AAAEC,kBAAAA,WAAW,EAAG;AAAhB,iBAAd;;AACA,sBAAKH,KAAL,CAAW0C,eAAX,CAA2B,CAA3B,EAA8BH,gBAA9B;AAEH,eAXD,MAWK;AAED,sBAAKrC,QAAL,CAAc;AAAEC,kBAAAA,WAAW,EAAG;AAAhB,iBAAd;;AACAuB,gBAAAA,OAAO,CAACS,GAAR,CAAY,2BAAZ;AACAQ,gBAAAA,KAAK,CAAC,+BAAD,CAAL;AAEH;;AA7BM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA/FO;AAAA,UAiIlBC,UAjIkB,yEAiIL;AAAA;AAAA;AAAA;AAAA;AAAA;AAET,oBAAK1C,QAAL,CAAc;AAAEC,gBAAAA,WAAW,EAAG;AAAhB,eAAd;;AAEOW,cAAAA,QAJE,GAIU,MAAKd,KAAL,CAAWe,UAJrB,CAIFD,QAJE;AAKLE,cAAAA,MALK,GAKI,CALJ;AAMLC,cAAAA,cANK,GAMU,EANV;AAAA;AAAA,qBAQHH,QAAQ,CAACI,OAAT,CAAiBC,uBAAjB,CAAyC,MAAKnB,KAAL,CAAWoB,YAAX,CAAwB,MAAKpB,KAAL,CAAWqB,KAAnC,CAAzC,EAAoFC,IAApF,GACLC,IADK,CACA,UAAAC,GAAG;AAAA,uBAAIR,MAAM,GAAGQ,GAAb;AAAA,eADH,EAELC,KAFK,CAECC,OAAO,CAACC,KAFT,CARG;;AAAA;AAAA,oBAaNX,MAAM,IAAI,CAbJ;AAAA;AAAA;AAAA;;AAcGY,cAAAA,CAdH,GAcK,CAdL;;AAAA;AAAA,oBAcQA,CAAC,GAAEZ,MAdX;AAAA;AAAA;AAAA;;AAgBGa,cAAAA,MAhBH,GAgBY,EAhBZ;AAAA;AAAA,qBAiBKf,QAAQ,CAACI,OAAT,CAAiBY,qBAAjB,CAAuC,MAAK9B,KAAL,CAAWoB,YAAX,CAAwB,MAAKpB,KAAL,CAAWqB,KAAnC,CAAvC,EAAkFO,CAAlF,EAAqFN,IAArF,GACLC,IADK,CACA,UAAAC,GAAG;AAAA,uBAAIK,MAAM,GAAGL,GAAb;AAAA,eADH,EAELC,KAFK,CAECC,OAAO,CAACC,KAFT,CAjBL;;AAAA;AAqBDV,cAAAA,cAAc,CAACc,IAAf,CAAoBF,MAApB;;AArBC;AAcmBD,cAAAA,CAAC,EAdpB;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAwBLX,cAAAA,cAAc,GAAG,kCAAjB;;AAxBK;AA2BLsB,cAAAA,gBA3BK,GA2Bc;AACnBnB,gBAAAA,YAAY,EAAG,MAAKpB,KAAL,CAAWoB,YAAX,CAAwB,MAAKpB,KAAL,CAAWqB,KAAnC,CADI;AAEnBmB,gBAAAA,QAAQ,EAAO,MAAKxC,KAAL,CAAWsC,IAFP;AAGnBG,gBAAAA,UAAU,EAAKxB;AAHI,eA3Bd;;AAiCT,oBAAKf,QAAL,CAAc;AAAEC,gBAAAA,WAAW,EAAG;AAAhB,eAAd;;AACA,oBAAKH,KAAL,CAAW0C,eAAX,CAA2B,CAA3B,EAA8BH,gBAA9B;;AAlCS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAjIK;AAAA,UAsKlBM,aAtKkB,yEAsKF;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZ,oBAAK3C,QAAL,CAAc;AAAEC,gBAAAA,WAAW,EAAG;AAAhB,eAAd;;AAEOW,cAAAA,QAJK,GAIO,MAAKd,KAAL,CAAWe,UAJlB,CAILD,QAJK;AAKRE,cAAAA,MALQ,GAKC,CALD;AAMRC,cAAAA,cANQ,GAMO,EANP;AAAA;AAAA,qBAQNH,QAAQ,CAACI,OAAT,CAAiBC,uBAAjB,CAAyC,MAAKnB,KAAL,CAAWoB,YAAX,CAAwB,MAAKpB,KAAL,CAAWqB,KAAnC,CAAzC,EAAoFC,IAApF,GACLC,IADK,CACA,UAAAC,GAAG;AAAA,uBAAIR,MAAM,GAAGQ,GAAb;AAAA,eADH,EAELC,KAFK,CAECC,OAAO,CAACC,KAFT,CARM;;AAAA;AAAA,oBAYTX,MAAM,IAAI,CAZD;AAAA;AAAA;AAAA;;AAaAY,cAAAA,CAbA,GAaE,CAbF;;AAAA;AAAA,oBAaKA,CAAC,GAAEZ,MAbR;AAAA;AAAA;AAAA;;AAeAa,cAAAA,MAfA,GAeS,EAfT;AAAA;AAAA,qBAgBEf,QAAQ,CAACI,OAAT,CAAiBY,qBAAjB,CAAuC,MAAK9B,KAAL,CAAWoB,YAAX,CAAwB,MAAKpB,KAAL,CAAWqB,KAAnC,CAAvC,EAAkFO,CAAlF,EAAqFN,IAArF,GACLC,IADK,CACA,UAAAC,GAAG;AAAA,uBAAIK,MAAM,GAAGL,GAAb;AAAA,eADH,EAELC,KAFK,CAECC,OAAO,CAACC,KAFT,CAhBF;;AAAA;AAoBJV,cAAAA,cAAc,CAACc,IAAf,CAAoBF,MAApB;;AApBI;AAagBD,cAAAA,CAAC,EAbjB;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAwBRX,cAAAA,cAAc,GAAG,kCAAjB;;AAxBQ;AA4BRsB,cAAAA,gBA5BQ,GA4BW;AACnBnB,gBAAAA,YAAY,EAAG,MAAKpB,KAAL,CAAWoB,YAAX,CAAwB,MAAKpB,KAAL,CAAWqB,KAAnC,CADI;AAEnBmB,gBAAAA,QAAQ,EAAO,MAAKxC,KAAL,CAAWsC,IAFP;AAGnBG,gBAAAA,UAAU,EAAKxB;AAHI,eA5BX,EAkCZ;;AACA,oBAAKf,QAAL,CAAc;AAAEC,gBAAAA,WAAW,EAAG;AAAhB,eAAd;;AACA,oBAAKH,KAAL,CAAW0C,eAAX,CAA2B,CAA3B,EAA8BH,gBAA9B;;AApCY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAtKE;AAAA,UA6MlBO,cA7MkB,yEA6MD;AAAA;AAAA;AAAA;AAAA;AAAA;AAEb,oBAAK5C,QAAL,CAAc;AAAEC,gBAAAA,WAAW,EAAG;AAAhB,eAAd;;AAEOW,cAAAA,QAJM,GAIM,MAAKd,KAAL,CAAWe,UAJjB,CAIND,QAJM;AAKTE,cAAAA,MALS,GAKA,CALA;AAMTC,cAAAA,cANS,GAMM,EANN;AAAA;AAAA,qBAQPH,QAAQ,CAACI,OAAT,CAAiBC,uBAAjB,CAAyC,MAAKnB,KAAL,CAAWoB,YAAX,CAAwB,MAAKpB,KAAL,CAAWqB,KAAnC,CAAzC,EAAoFC,IAApF,GACLC,IADK,CACA,UAAAC,GAAG;AAAA,uBAAIR,MAAM,GAAGQ,GAAb;AAAA,eADH,EAELC,KAFK,CAECC,OAAO,CAACC,KAFT,CARO;;AAAA;AAAA,oBAYVX,MAAM,IAAI,CAZA;AAAA;AAAA;AAAA;;AAaDY,cAAAA,CAbC,GAaC,CAbD;;AAAA;AAAA,oBAaIA,CAAC,GAAEZ,MAbP;AAAA;AAAA;AAAA;;AAeDa,cAAAA,MAfC,GAeQ,EAfR;AAAA;AAAA,qBAgBCf,QAAQ,CAACI,OAAT,CAAiBY,qBAAjB,CAAuC,MAAK9B,KAAL,CAAWoB,YAAX,CAAwB,MAAKpB,KAAL,CAAWqB,KAAnC,CAAvC,EAAkFO,CAAlF,EAAqFN,IAArF,GACLC,IADK,CACA,UAAAC,GAAG;AAAA,uBAAIK,MAAM,GAAGL,GAAb;AAAA,eADH,EAELC,KAFK,CAECC,OAAO,CAACC,KAFT,CAhBD;;AAAA;AAoBLV,cAAAA,cAAc,CAACc,IAAf,CAAoBF,MAApB;;AApBK;AAaeD,cAAAA,CAAC,EAbhB;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAwBTX,cAAAA,cAAc,GAAG,kCAAjB;;AAxBS;AA4BTsB,cAAAA,gBA5BS,GA4BU;AACnBnB,gBAAAA,YAAY,EAAG,MAAKpB,KAAL,CAAWoB,YAAX,CAAwB,MAAKpB,KAAL,CAAWqB,KAAnC,CADI;AAEnBmB,gBAAAA,QAAQ,EAAO,MAAKxC,KAAL,CAAWsC,IAFP;AAGnBG,gBAAAA,UAAU,EAAKxB;AAHI,eA5BV,EAkCb;;AACA,oBAAKf,QAAL,CAAc;AAAEC,gBAAAA,WAAW,EAAG;AAAhB,eAAd;;AACA,oBAAKH,KAAL,CAAW0C,eAAX,CAA2B,CAA3B,EAA8BH,gBAA9B;;AApCa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA7MC;;AAAA,UAqPlBjC,gBArPkB,GAqPC,YAAM;AAErBoB,MAAAA,OAAO,CAACS,GAAR,CAAY,4BAAZ;AAEA,UAAMY,sBAAsB,GAAG,IAAIC,IAAJ,CAAS,MAAKhD,KAAL,CAAWsC,IAAX,CAAgBW,sBAAzB,CAA/B;AACA,UAAMC,oBAAoB,GAAG,IAAIF,IAAJ,CAAS,MAAKhD,KAAL,CAAWsC,IAAX,CAAgBa,oBAAzB,CAA7B;;AAEA,UAAG,IAAIH,IAAJ,MAAcE,oBAAjB,EAAsC;AAClCE,QAAAA,aAAa,CAAC,MAAKxC,KAAL,CAAWR,oBAAZ,CAAb;;AACA,cAAKJ,KAAL,CAAWqD,mBAAX,CAA+B,MAAKrD,KAAL,CAAWsC,IAA1C,EAAgD,CAAhD;;AACA,cAAKpC,QAAL,CAAc;AACVoD,UAAAA,YAAY,EAAG,KADL;AAEVC,UAAAA,YAAY,EAAG;AAFL,SAAd;AAIH;;AAED,UAAI,IAAIP,IAAJ,MAAcD,sBAAf,IAA2C,IAAIC,IAAJ,MAAcE,oBAA5D,EAAkF;AAC9E,cAAKlD,KAAL,CAAWqD,mBAAX,CAA+B,MAAKrD,KAAL,CAAWsC,IAA1C,EAAgD,CAAhD;;AACA,cAAKpC,QAAL,CAAc;AACVoD,UAAAA,YAAY,EAAG,IADL;AAEVC,UAAAA,YAAY,EAAG;AAFL,SAAd;AAIH,OAND,MAMK;AACD,cAAKrD,QAAL,CAAc;AACVoD,UAAAA,YAAY,EAAG;AADL,SAAd;AAGH;AACJ,KAhRiB;;AAAA,UAmRlB9C,gBAnRkB,GAmRC,YAAM;AAErBkB,MAAAA,OAAO,CAACS,GAAR,CAAY,4BAAZ;AAEA,UAAMqB,UAAU,GAAG,IAAIR,IAAJ,CAAS,MAAKhD,KAAL,CAAWsC,IAAX,CAAgBmB,UAAzB,CAAnB;;AAEA,UAAG,IAAIT,IAAJ,MAAcQ,UAAjB,EAA4B;AACxB,cAAKxD,KAAL,CAAW0D,oBAAX,CAAgC,MAAK1D,KAAL,CAAWsC,IAA3C,EAAiD,CAAjD;;AACA,cAAKpC,QAAL,CAAc;AACVyD,UAAAA,YAAY,EAAG;AADL,SAAd;;AAGAP,QAAAA,aAAa,CAAC,MAAKxC,KAAL,CAAWL,oBAAZ,CAAb;AACH,OAND,MAMK;AACD,cAAKL,QAAL,CAAc;AACVyD,UAAAA,YAAY,EAAG;AADL,SAAd;AAGH;AACJ,KApSiB;;AAAA,UAuSlBjD,YAvSkB,GAuSH,YAAM;AAEjBgB,MAAAA,OAAO,CAACS,GAAR,CAAY,+BAAZ;AAEA,UAAMyB,0BAA0B,GAAG,IAAIZ,IAAJ,CAAS,MAAKhD,KAAL,CAAWsC,IAAX,CAAgBuB,IAAzB,CAAnC;AACA,UAAMC,wBAAwB,GAAG,IAAId,IAAJ,CAAS,MAAKhD,KAAL,CAAWsC,IAAX,CAAgByB,IAAzB,CAAjC;;AAEA,UAAG,IAAIf,IAAJ,MAAcc,wBAAjB,EAA0C;AACtCV,QAAAA,aAAa,CAAC,MAAKxC,KAAL,CAAWH,gBAAZ,CAAb;;AACA,cAAKT,KAAL,CAAWgE,iBAAX,CAA6B,MAAKhE,KAAL,CAAWsC,IAAxC,EAA8C,CAA9C,EAFsC,CAGtC;AACA;AACA;AACA;;AACH;;AAED,UAAI,IAAIU,IAAJ,MAAcY,0BAAf,IAA+C,IAAIZ,IAAJ,MAAcc,wBAAhE,EAA0F;AACtF,cAAK9D,KAAL,CAAWgE,iBAAX,CAA6B,MAAKhE,KAAL,CAAWsC,IAAxC,EAA8C,CAA9C,EADsF,CAEtF;AACA;AACA;;AACH,OALD,MAKK,CACD;AACA;AACA;AACH;AACJ,KAjUiB;;AAAA,UAmUlB2B,oBAnUkB,GAmUK,YAAM;AACzBb,MAAAA,aAAa,CAAC,MAAKxC,KAAL,CAAWR,oBAAZ,CAAb;AACAgD,MAAAA,aAAa,CAAC,MAAKxC,KAAL,CAAWL,oBAAZ,CAAb;AACA6C,MAAAA,aAAa,CAAC,MAAKxC,KAAL,CAAWH,gBAAZ,CAAb;AACA2C,MAAAA,aAAa,CAAC,MAAKxC,KAAL,CAAWsD,mBAAZ,CAAb;AACH,KAxUiB;;AAAA,UA2UlBC,cA3UkB,yEA2UD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGV,MAAKvD,KAAL,CAAW0C,YAHD;AAAA;AAAA;AAAA;;AAIT5B,cAAAA,OAAO,CAACS,GAAR,CAAY7C,WAAZ;AACOwB,cAAAA,QALE,GAKU,MAAKd,KAAL,CAAWe,UALrB,CAKFD,QALE;AAMLE,cAAAA,MANK,GAMI,CANJ,EAOLoD,YAPK,GAOU,EAPV,EAQLC,eARK,GAQa,EARb,EAQgB;;AARhB;AAAA,qBAUHvD,QAAQ,CAACI,OAAT,CAAiBmB,YAAjB,CAA8B,MAAKrC,KAAL,CAAWoB,YAAX,CAAwB,MAAKpB,KAAL,CAAWqB,KAAnC,CAA9B,EAAyEC,IAAzE,GACLC,IADK,CACA,UAAAC,GAAG;AAAA,uBAAIR,MAAM,GAAGQ,GAAb;AAAA,eADH,EAELC,KAFK,CAECC,OAAO,CAACS,GAFT,CAVG;;AAAA;AAcDP,cAAAA,CAdC,GAcC,CAdD;;AAAA;AAAA,oBAcIA,CAAC,GAAEZ,MAdP;AAAA;AAAA;AAAA;;AAeDsD,cAAAA,OAfC;AAAA;AAAA,qBAiBCxD,QAAQ,CAACI,OAAT,CAAiBqD,YAAjB,CAA8B,MAAKvE,KAAL,CAAWoB,YAAX,CAAwB,MAAKpB,KAAL,CAAWqB,KAAnC,CAA9B,EAAyEO,CAAzE,EAA4EN,IAA5E,GACLC,IADK,CACA,UAAAC,GAAG;AAAA,uBAAI8C,OAAO,GAAG9C,GAAd;AAAA,eADH,EAELC,KAFK,CAECC,OAAO,CAACS,GAFT,CAjBD;;AAAA;AAqBLiC,cAAAA,YAAY,CAACrC,IAAb,CAAkBuC,OAAlB;;AArBK;AAce1C,cAAAA,CAAC,EAdhB;AAAA;AAAA;;AAAA;AAyBTtC,cAAAA,WAAW,CAACkF,YAAZ,CAAyBC,OAAzB,CAAiC,UAACC,QAAD,EAAc;AAC3C,oBAAIC,KAAK,GAAG,CAAZ;AAEAP,gBAAAA,YAAY,CAACK,OAAb,CAAqB,UAACG,QAAD,EAAc;AAC/B,sBAAGF,QAAQ,CAACG,UAAT,IAAuBD,QAA1B,EAAmC;AAC/BD,oBAAAA,KAAK;AACR;AACJ,iBAJD;;AAMA,oBAAGA,KAAK,IAAI,CAAZ,EAAc;AACVN,kBAAAA,eAAe,CAACtC,IAAhB,CAAqB2C,QAArB;AACH;AACJ,eAZD;AAcAL,cAAAA,eAAe,CAACI,OAAhB,CAAwB,UAACH,OAAD,EAAa;AACjC,sBAAKQ,UAAL,CAAgBR,OAAO,CAACO,UAAR,CAAmBE,SAAnB,CAA6B,CAA7B,EAA+B,EAA/B,CAAhB,EAAoDT,OAAO,CAACU,KAAR,CAAcC,GAAd,CAAkBC,MAAtE,EACC3D,IADD,CACMG,OAAO,CAACS,GADd,EAECV,KAFD,CAEOC,OAAO,CAACC,KAFf;AAGH,eAJD;AAMAD,cAAAA,OAAO,CAACS,GAAR,CAAYkC,eAAZ;AACA3C,cAAAA,OAAO,CAACS,GAAR,CAAYiC,YAAZ;AACA1C,cAAAA,OAAO,CAACS,GAAR,CAAY,kBAAZ;AA/CS;AAAA;;AAAA;AAiDTT,cAAAA,OAAO,CAACS,GAAR,CAAY,qBAAZ;;AAjDS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA3UC;;AAAA,UAmYlB2C,UAnYkB,GAmYL,UAACK,OAAD,EAAUD,MAAV,EAAqB;AAE9B,UAAME,OAAO,GAAG,IAAIvF,OAAJ,CAAY,wBAAZ,EAAsC,+EAAtC,CAAhB;AACA,aAAO,IAAIwF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpCH,QAAAA,OAAO,CAACI,IAAR,CAAa,OAAON,MAApB,EAA4B,UAA5B,EAAwCC,OAAxC,EAAiD,UAACxD,KAAD,EAAQ8D,IAAR,EAAiB;AAE9D,cAAGA,IAAI,CAACC,IAAL,KAAc,SAAjB,EAA4BJ,OAAO,CAACG,IAAD,CAAP;AAE5B,cAAG9D,KAAH,EAAU4D,MAAM,CAAC5D,KAAD,CAAN;AAEX,SANH;AAQH,OAVM,CAAP;AAWH,KAjZiB;;AAEd,UAAKf,KAAL,GAAa;AACTK,MAAAA,cAAc,EAAG,IADR;AAETJ,MAAAA,MAAM,EAAG,KAFA;AAGTmB,MAAAA,cAAc,EAAG,CAHR;AAITsB,MAAAA,YAAY,EAAG,KAJN;AAKTlD,MAAAA,oBAAoB,EAAG,IALd;AAMTmD,MAAAA,YAAY,EAAG,KANN;AAOTI,MAAAA,YAAY,EAAG,KAPN;AAQTpD,MAAAA,oBAAoB,EAAG,IARd;AAST2D,MAAAA,mBAAmB,EAAG,IATb;AAUTzD,MAAAA,gBAAgB,EAAG,IAVV;AAWTN,MAAAA,WAAW,EAAG,KAXL;AAYT8B,MAAAA,aAAa,EAAG;AAZP,KAAb;AAFc;AAgBjB;;;;6BAmYO;AAAA;;AAAA,UACGK,IADH,GACW,KAAKtC,KADhB,CACGsC,IADH;AAEJZ,MAAAA,OAAO,CAACS,GAAR,CAAa,qBAAoBG,IAAI,CAACqD,cAAzB,GAA0C,QAA1C,GAAmD,KAAK/E,KAAL,CAAW0C,YAA3E;AACA5B,MAAAA,OAAO,CAACS,GAAR,CAAa,qBAAoBG,IAAI,CAACqD,cAAzB,GAA0C,QAA1C,GAAmD,KAAK/E,KAAL,CAAW+C,YAA3E;AACAjC,MAAAA,OAAO,CAACS,GAAR,CAAa,qBAAoBG,IAAI,CAACqD,cAAzB,GAA0C,QAA1C,GAAmD,KAAK/E,KAAL,CAAW2C,YAA3E;AAEA,UAAIqC,IAAI,GAAG;AACPC,QAAAA,OAAO,EAAG,OADH;AAEPC,QAAAA,MAAM,EAAG;AAFF,OAAX;AAKA,UAAIC,IAAI,GAAG;AACPF,QAAAA,OAAO,EAAG,MADH;AAEPC,QAAAA,MAAM,EAAG;AAFF,OAAX,CAXI,CAeJ;;AACA,0BACQ;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,OAAO,EAAE,KAAKnF,eAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,KAAnC;AAAyC,QAAA,YAAY,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK2B,IAAI,CAACqD,cADV,CADJ,eAII,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,SAAS,EAAC,cAA1C;AAAyD,QAAA,YAAY,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKrD,IAAI,CAAC0D,YADV,CAJJ,eAOI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,SAAS,EAAC,WAA1C;AAAsD,QAAA,YAAY,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAC6B1D,IAAI,CAAC2D,SADlC,CAPJ,eAUI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,SAAS,EAAC,KAA1C;AAAgD,QAAA,YAAY,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAC6B3D,IAAI,CAACW,sBAAL,CAA4B8B,SAA5B,CAAsC,CAAtC,EAAyC,EAAzC,CAD7B,CAVJ,eAaI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,SAAS,EAAC,KAA1C;AAAgD,QAAA,YAAY,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAC6BzC,IAAI,CAACa,oBAAL,CAA0B4B,SAA1B,CAAoC,CAApC,EAAuC,EAAvC,CAD7B,CAbJ,eAgBI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,SAAS,EAAC,IAA1C;AAA+C,QAAA,YAAY,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAC6BzC,IAAI,CAACmB,UAAL,CAAgBsB,SAAhB,CAA0B,CAA1B,EAA6B,EAA7B,CAD7B,CAhBJ,eAmBI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAgC,QAAA,SAAS,EAAC,IAA1C;AAA+C,QAAA,YAAY,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAC6BzC,IAAI,CAACF,WADlC,CAnBJ,eAsBI,oBAAC,IAAD;AACI,QAAA,SAAS,MADb;AAEI,QAAA,SAAS,EAAC,KAFd;AAGI,QAAA,OAAO,EAAC,QAHZ;AAII,QAAA,UAAU,EAAC,QAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAMQ,oBAAC,MAAD;AACI,QAAA,OAAO,EAAC,UADZ;AAEI,QAAA,KAAK,EAAC,SAFV;AAGI,QAAA,SAAS,EAAC,aAHd;AAII,QAAA,KAAK,EAAG,KAAKxB,KAAL,CAAW+C,YAAX,IAA2B,KAAK/C,KAAL,CAAW2C,YAAvC,GAAuDqC,IAAvD,GAA8DG,IAJzE,CAIgF;AAJhF;AAKI,QAAA,OAAO,EAAE,KAAKjD,cALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANR,eAaQ,oBAAC,MAAD;AACI,QAAA,OAAO,EAAC,UADZ;AAEI,QAAA,KAAK,EAAC,SAFV;AAGI,QAAA,SAAS,EAAC,aAHd;AAII,QAAA,KAAK,EAAE,KAAKlC,KAAL,CAAW+C,YAAX,GAA0BiC,IAA1B,GAAiCG,IAJ5C;AAKI,QAAA,OAAO,EAAE,KAAKnD,UALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbR,eAoBQ,oBAAC,MAAD;AACI,QAAA,OAAO,EAAC,UADZ;AAEI,QAAA,KAAK,EAAC,SAFV;AAGI,QAAA,SAAS,EAAC,aAHd;AAII,QAAA,KAAK,EAAE,KAAKhC,KAAL,CAAW2C,YAAX,GAA0BwC,IAA1B,GAAiCH,IAJ5C;AAKI,QAAA,OAAO,EAAE,KAAK/C,aALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBApBR,CAtBJ,eAkDI,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AACI,QAAA,SAAS,EAAC,KADd;AAEI,QAAA,OAAO,EAAC,QAFZ;AAGI,QAAA,UAAU,EAAC,QAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAII,oBAAC,KAAD;AACI,2BAAgB,gBADpB;AAEI,4BAAiB,gBAFrB;AAGI,QAAA,IAAI,EAAE,KAAKjC,KAAL,CAAWqB,aAHrB;AAII,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAC/B,QAAL,CAAc;AAAE+B,YAAAA,aAAa,EAAG;AAAlB,WAAd,CAAN;AAAA,SAJb;AAKI,QAAA,SAAS,EAAC,qBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOI,oBAAC,YAAD;AACI,QAAA,IAAI,EAAEK,IADV;AAEI,QAAA,cAAc,EAAE,KAAK1B,KAAL,CAAWK,cAF/B;AAGI,QAAA,MAAM,EAAE,KAAKL,KAAL,CAAWC,MAHvB;AAII,QAAA,cAAc,EAAE,KAAKD,KAAL,CAAWoB,cAJ/B;AAKI,QAAA,YAAY,EAAE,KAAKpB,KAAL,CAAW0C,YAL7B;AAMI,QAAA,QAAQ,EAAE,KAAKpB,QANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CAJJ,CAlDJ,CADR;AA0EH;;;;EA/euC7C,S;;SAAvBU,c","sourcesContent":["import React, { Component } from 'react'\nimport AadhaarData from '../Verification/AdhaarData'\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CandiateCard from '../Elections/CandidateCard';\nimport '../index.css'\nimport { Modal } from '@material-ui/core';\nconst SendOtp = require('sendotp')\n\n\nexport default class SingleElection extends Component{\n    \n    constructor(props){\n        super(props)\n        this.state = {    \n            showCandidates : null,\n            isShow : false,\n            candidateCount : 0,\n            isVotingTime : false,\n            UpdateVotingInterval : null,\n            isVotingOver : false,\n            isResultTime : false,\n            UpdateResultInterval : null,\n            UpdateAlertInterval : null,\n            UpdateCRInterval : null,\n            loaderStart : false,\n            isCardClicked : false\n        }\n    }\n    \n\n    componentWillMount = () => {\n\n        this.setState({ loaderStart : true })\n        const UpdateVotingInterval = setInterval(this.updateVotingTime, 5000)\n\n        const UpdateResultInterval = setInterval(this.updateResultDate, 5000)\n\n        const UpdateCRInterval = setInterval(this.updateCRTime, 5000)\n\n        // const UpdateAlertInterval = setInterval(this.updateAlertMsg, 180000) //this interval should run only in voting time period\n            // this.setState({\n            //     UpdateAlertInterval\n            // })\n            // console.log(\"voting interval\")\n        \n\n        this.setState({\n            UpdateVotingInterval,\n            UpdateResultInterval,\n            UpdateCRInterval,\n            loaderStart : false,\n            // UpdateAlertInterval\n        })\n    }\n\n    checkCandidates = async() => {\n\n        this.setState({ loaderStart : true })\n        \n        if(this.state.isShow){\n            this.setState({\n                isShow : false\n            })\n        }else{\n\n            const {contract} = this.props.userObject\n            let length = 0\n            let showCandidates=[];\n\n            await contract.methods.countElectionCandidates(this.props.electionHash[this.props.index]).call()\n            .then(res => length = res)\n            .catch(console.error)\n            \n            if((length - 1)  != 0){\n                //console.log(\"yaha aaraha hai kya\")\n                for(let i=0; i< length; i++){\n\n                    let result = \"\";\n                    await contract.methods.getSelectedCandidates(this.props.electionHash[this.props.index], i).call()\n                    .then(res => result = res)\n                    .catch(console.error)\n                   \n                    showCandidates.push(result)\n                }\n                //console.log(showCandidates[0])\n\n            }else{\n                showCandidates = [[\"Candidates are not Nominated yet\", 0]]\n                //console.log(\"ye aana chahiye\")\n                \n            }\n        \n            this.setState({\n                showCandidates,\n                isShow : true,\n                candidateCount : length - 1 ,\n                loaderStart : false,\n                isCardClicked : true\n            })\n            \n\n        }\n\n        \n    }\n\n    goToVote = async() => {\n        this.setState({ loaderStart : true })\n        console.log(\"move to Voting Home\")\n        const {contract} = this.props.userObject\n\n        let TotalVoters = 0\n        await contract.methods.aadhaarCount(this.props.electionHash[this.props.index]).call()\n        .then(res => TotalVoters = res)\n        .catch(console.error)\n        console.log(TotalVoters)\n\n        //condition for checking that all thr voter are voted or not \n        if(TotalVoters < this.props.item.TotalVoters){\n\n            let selectedElection = {\n                electionHash : this.props.electionHash[this.props.index],\n                election     : this.props.item,\n                candidates   : this.state.showCandidates\n            }\n\n            this.setState({ loaderStart : false })\n            this.props.updateHomeState(3, selectedElection)\n\n        }else{\n\n            this.setState({ loaderStart : false })\n            console.log(\"Total Voter count exceeds\")\n            alert(\"All Voters are already Voted!\")\n\n        }\n        \n        \n    }\n\n    openResult = async() => {\n\n        this.setState({ loaderStart : true })\n\n        const {contract} = this.props.userObject\n        let length = 0\n        let showCandidates=[];\n\n        await contract.methods.countElectionCandidates(this.props.electionHash[this.props.index]).call()\n        .then(res => length = res)\n        .catch(console.error)\n        \n\n        if(length != 0){\n            for(let i=0; i< length; i++){\n\n                let result = \"\";\n                await contract.methods.getSelectedCandidates(this.props.electionHash[this.props.index], i).call()\n                .then(res => result = res)\n                .catch(console.error)\n\n                showCandidates.push(result)\n            }\n        }else{\n            showCandidates = \"Candidates are not Nominated yet\"\n        }\n\n        let selectedElection = {\n            electionHash : this.props.electionHash[this.props.index],\n            election     : this.props.item,\n            candidates   : showCandidates\n        }\n\n        this.setState({ loaderStart : false })\n        this.props.updateHomeState(4, selectedElection)\n    }\n\n    openPreReport = async() => {\n\n        this.setState({ loaderStart : true })\n\n        const {contract} = this.props.userObject\n        let length = 0\n        let showCandidates=[];\n\n        await contract.methods.countElectionCandidates(this.props.electionHash[this.props.index]).call()\n        .then(res => length = res)\n        .catch(console.error)\n        \n        if(length != 0){\n            for(let i=0; i< length; i++){\n\n                let result = \"\";\n                await contract.methods.getSelectedCandidates(this.props.electionHash[this.props.index], i).call()\n                .then(res => result = res)\n                .catch(console.error)\n\n                showCandidates.push(result)\n            }\n\n        }else{\n            showCandidates = \"Candidates are not Nominated yet\"\n        }\n\n\n        let selectedElection = {\n            electionHash : this.props.electionHash[this.props.index],\n            election     : this.props.item,\n            candidates   : showCandidates\n        }\n\n        //console.log(selectedElection.candidates[0])\n        this.setState({ loaderStart : false })\n        this.props.updateHomeState(5, selectedElection)\n    }\n\n    openPostReport = async() => {\n\n        this.setState({ loaderStart : true })\n\n        const {contract} = this.props.userObject\n        let length = 0\n        let showCandidates=[];\n\n        await contract.methods.countElectionCandidates(this.props.electionHash[this.props.index]).call()\n        .then(res => length = res)\n        .catch(console.error)\n        \n        if(length != 0){\n            for(let i=0; i< length; i++){\n\n                let result = \"\";\n                await contract.methods.getSelectedCandidates(this.props.electionHash[this.props.index], i).call()\n                .then(res => result = res)\n                .catch(console.error)\n\n                showCandidates.push(result)\n            }\n\n        }else{\n            showCandidates = \"Candidates are not Nominated yet\"\n        }\n\n\n        let selectedElection = {\n            electionHash : this.props.electionHash[this.props.index],\n            election     : this.props.item,\n            candidates   : showCandidates\n        }\n\n        //console.log(selectedElection.candidates[0])\n        this.setState({ loaderStart : false })\n        this.props.updateHomeState(6, selectedElection)\n    }\n\n    //interval function for setting the voting time as per election time constraint\n    updateVotingTime = () => {\n\n        console.log(\"Voting Interval is running\")\n\n        const ElectionStartDateNTime = new Date(this.props.item.electionStartDateNTime)\n        const ElectionEndDateNTime = new Date(this.props.item.electionEndDateNTime)\n\n        if(new Date() >= ElectionEndDateNTime){\n            clearInterval(this.state.UpdateVotingInterval)\n            this.props.updateLiveElections(this.props.item ,0)\n            this.setState({\n                isVotingTime : false,\n                isVotingOver : true\n            })\n        }\n     \n        if((new Date() >= ElectionStartDateNTime) && (new Date() <= ElectionEndDateNTime)){\n            this.props.updateLiveElections(this.props.item ,1)\n            this.setState({\n                isVotingTime : true,\n                isVotingOver : false\n            })\n        }else{\n            this.setState({\n                isVotingTime : false\n            })\n        }\n    }\n\n    //interval function for diplaying the Result of the election\n    updateResultDate = () => {\n\n        console.log(\"Result Interval is running\")\n\n        const ResultDate = new Date(this.props.item.resultDate)\n\n        if(new Date() >= ResultDate){\n            this.props.updateOtherElections(this.props.item, 1)\n            this.setState({\n                isResultTime : true\n            })\n            clearInterval(this.state.UpdateResultInterval)\n        }else{\n            this.setState({\n                isResultTime : false\n            })\n        }\n    }\n\n    //interval function for diplaying the CAndidate Regidtration of the election\n    updateCRTime = () => {\n\n        console.log(\"Candidate Interval is running\")\n\n        const RegistrationStartDateNTime = new Date(this.props.item.ICRD)\n        const RegistrationEndDateNTime = new Date(this.props.item.FCRD)\n\n        if(new Date() >= RegistrationEndDateNTime){\n            clearInterval(this.state.UpdateCRInterval)\n            this.props.updateCRElections(this.props.item ,0)\n            // this.setState({\n            //     isVotingTime : false,\n            //     isVotingOver : true\n            // })\n        }\n     \n        if((new Date() >= RegistrationStartDateNTime) && (new Date() <= RegistrationEndDateNTime)){\n            this.props.updateCRElections(this.props.item ,1)\n            // this.setState({\n            //     isVotingTime : true\n            // })\n        }else{\n            // this.setState({\n            //     isVotingTime : false\n            // })\n        }\n    }\n\n    componentWillUnmount = () => {\n        clearInterval(this.state.UpdateVotingInterval)\n        clearInterval(this.state.UpdateResultInterval)\n        clearInterval(this.state.UpdateCRInterval)\n        clearInterval(this.state.UpdateAlertInterval)\n    }\n\n    //interval function for sending the alert msg at the time of voting period\n    updateAlertMsg = async() => {\n\n\n        if(this.state.isVotingTime){\n            console.log(AadhaarData)  \n            const {contract} = this.props.userObject\n            let length = 0,\n                votedAadhaar = [], //array of aadhaar that voted already in this election\n                nonVotedAadhaar = [] //array of aadhaar that not voted in this election yet\n\n            await contract.methods.aadhaarCount(this.props.electionHash[this.props.index]).call()\n            .then(res => length = res)\n            .catch(console.log)\n            \n            for(let i=0; i< length; i++){\n                let aadhaar;\n\n                await contract.methods.checkAadhaar(this.props.electionHash[this.props.index], i).call()\n                .then(res => aadhaar = res)\n                .catch(console.log)\n\n                votedAadhaar.push(aadhaar)\n            }\n\n            \n            AadhaarData.AadhaarCards.forEach((aadhaar1) => {\n                let count = 0\n\n                votedAadhaar.forEach((aadhaar2) => {\n                    if(aadhaar1.Aadhaar_Id == aadhaar2){\n                        count++\n                    }\n                })\n\n                if(count == 0){\n                    nonVotedAadhaar.push(aadhaar1)\n                }\n            })\n\n            nonVotedAadhaar.forEach((aadhaar) => {\n                this.alertVoter(aadhaar.Aadhaar_Id.substring(6,12), aadhaar.e_Kyc.Poi.mobile)\n                .then(console.log)\n                .catch(console.error)\n            })\n\n            console.log(nonVotedAadhaar)\n            console.log(votedAadhaar)\n            console.log(\"Alert the voters\")\n        }else{\n            console.log(\"VOting time is over\")\n        }\n\n        \n    }\n\n    //alert function for send the alert msg to the voter\n    alertVoter = (Aadhaar, mobile) => {\n\n        const sendOtp = new SendOtp('269401AbIEOvkX5c9a54d1', 'Hii, ******{{otp}} Go & Vote, Only few Hours are remaining in Election Voting'); \n        return new Promise((resolve, reject) => {\n\n            sendOtp.send(\"91\" + mobile, \"DigiVote\", Aadhaar, (error, data) => {\n            \n                if(data.type === \"success\") resolve(data)\n        \n                if(error) reject(error)  \n        \n              });\n    \n        })\n    }\n\n    render(){\n        const {item} = this.props;\n        console.log( \" Voting time of \"+ item.typeOfElection + \" is : \"+this.state.isVotingTime)\n        console.log( \" Result time of \"+ item.typeOfElection + \" is : \"+this.state.isResultTime)\n        console.log( \" Voting Over of \"+ item.typeOfElection + \" is : \"+this.state.isVotingOver)\n\n        let show = {\n            display : \"block\",\n            margin : \"5px\"\n        }\n\n        let hide = {\n            display : \"none\",\n            margin : \"5px\"\n        }\n        //console.log(this.state.showCandidates)\n        return(\n                <div className=\"electionCardDiv\" onClick={this.checkCandidates}>\n                    <Typography variant=\"h4\" className=\"ToE\" gutterBottom>\n                        {item.typeOfElection}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" className=\"constituency\" gutterBottom>\n                        {item.constituency}\n                    </Typography>\n                    <Typography variant=\"subtitle2\" className=\"organizer\" gutterBottom>\n                        <em>ORGANIZER    : </em>{item.organizer}\n                    </Typography>\n                    <Typography variant=\"subtitle2\" className=\"ESD\" gutterBottom>\n                        <em>VOTING START : </em>{item.electionStartDateNTime.substring(0, 24)}\n                    </Typography>\n                    <Typography variant=\"subtitle2\" className=\"EED\" gutterBottom>\n                        <em>VOTING END   : </em>{item.electionEndDateNTime.substring(0, 24)}\n                    </Typography>\n                    <Typography variant=\"subtitle2\" className=\"RD\" gutterBottom>\n                        <em>RESULT DATE  : </em>{item.resultDate.substring(0, 24)}\n                    </Typography>\n                    <Typography variant=\"subtitle2\" className=\"TV\" gutterBottom>\n                        <em>TOTAL VOTERS : </em>{item.TotalVoters}\n                    </Typography>\n                    <Grid \n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                    >\n                            <Button \n                                variant=\"outlined\" \n                                color=\"primary\"\n                                className=\"ElectionBtn\"\n                                style={(this.state.isResultTime && this.state.isVotingOver) ? show : hide } //hide it after debugging\n                                onClick={this.openPostReport}\n                            >Post Analysis</Button>\n                            <Button \n                                variant=\"outlined\" \n                                color=\"primary\"\n                                className=\"ElectionBtn\"\n                                style={this.state.isResultTime ? show : hide }\n                                onClick={this.openResult}\n                            >Result</Button>\n                            <Button \n                                variant=\"outlined\" \n                                color=\"primary\"\n                                className=\"ElectionBtn\"\n                                style={this.state.isVotingOver ? hide : show }\n                                onClick={this.openPreReport}\n                            >Pre Analysis</Button>\n                    </Grid>\n                    <Grid container \n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\" >\n                        <Modal\n                            aria-labelledby=\"Candidate Card\"\n                            aria-describedby=\"Candidate Card\"\n                            open={this.state.isCardClicked}\n                            onClose={() => this.setState({ isCardClicked : false })}\n                            className=\"ElectionRequestForm\"\n                        >\n                            <CandiateCard\n                                item={item}\n                                showCandidates={this.state.showCandidates}\n                                isShow={this.state.isShow}\n                                candidateCount={this.state.candidateCount}\n                                isVotingTime={this.state.isVotingTime}\n                                goToVote={this.goToVote}\n                            />\n                        </Modal>\n                    </Grid>\n                </div>     \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}