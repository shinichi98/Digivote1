{"ast":null,"code":"import _regeneratorRuntime from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/utkarsh/study2/proj/DigiVote/client/src/Candidate/CandidateNomineeRequest.jsx\";\nimport React, { Component } from 'react';\nimport ElectionCard from '../Elections/ElectionCard';\nimport Grid from '@material-ui/core/Grid';\nimport { ipfsFetcher } from '../ipfsStore';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nvar CandidateNomineeRequest = /*#__PURE__*/function (_Component) {\n  _inherits(CandidateNomineeRequest, _Component);\n\n  function CandidateNomineeRequest(props) {\n    var _this;\n\n    _classCallCheck(this, CandidateNomineeRequest);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CandidateNomineeRequest).call(this, props));\n    _this.componentWillMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var contract, elections, electionsData, length, i, result, electionData, currentElectionInterval, candidateRequestCount, candidateRequestElection, _i, requestObject;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loaderStart: true\n              });\n\n              contract = _this.props.userObject.contract;\n              elections = [], electionsData = [], length = 0;\n              _context.next = 5;\n              return contract.methods.electionsCount().call().then(function (res) {\n                return length = res;\n              }).catch(console.error);\n\n            case 5:\n              i = 0;\n\n            case 6:\n              if (!(i < length)) {\n                _context.next = 18;\n                break;\n              }\n\n              result = void 0;\n              _context.next = 10;\n              return contract.methods.getElections(i).call().then(function (res) {\n                return result = res;\n              }).catch(console.error);\n\n            case 10:\n              _context.next = 12;\n              return ipfsFetcher(result);\n\n            case 12:\n              electionData = _context.sent;\n              elections.push(result);\n              electionsData.push(electionData);\n\n            case 15:\n              i++;\n              _context.next = 6;\n              break;\n\n            case 18:\n              //setting an interval for update the new Election every 5sec \n              currentElectionInterval = setInterval(_this.updateCurrentElection, 5000);\n              candidateRequestCount = 0, candidateRequestElection = [];\n              _context.next = 22;\n              return contract.methods.candidateRequestsCount(_this.props.username).call().then(function (res) {\n                return candidateRequestCount = res;\n              }).catch(console.error);\n\n            case 22:\n              _i = 0;\n\n            case 23:\n              if (!(_i < candidateRequestCount)) {\n                _context.next = 31;\n                break;\n              }\n\n              requestObject = void 0;\n              _context.next = 27;\n              return contract.methods.getRequest(_this.props.username, _i).call().then(function (res) {\n                return requestObject = res;\n              }).catch(console.error);\n\n            case 27:\n              candidateRequestElection.push(requestObject[1]);\n\n            case 28:\n              _i++;\n              _context.next = 23;\n              break;\n\n            case 31:\n              _this.setState({\n                elections: elections,\n                electionsData: electionsData,\n                currentElectionInterval: currentElectionInterval,\n                candidateRequestCount: candidateRequestCount,\n                candidateRequestElection: candidateRequestElection,\n                loaderStart: false\n              });\n\n              console.log(_this.state.electionsData);\n\n            case 33:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.updateCurrentElection = function () {\n      var newElections = [],\n          length = _this.state.electionsData.length;\n\n      if (length) {\n        for (var i = 0; i < length; i++) {\n          var ICRD = new Date(_this.state.electionsData[i].ICRD);\n          var FCRD = new Date(_this.state.electionsData[i].FCRD);\n\n          if (new Date() >= ICRD && new Date() <= FCRD) {\n            newElections.push([_this.state.electionsData[i], _this.state.elections[i]]);\n          }\n        }\n\n        if (newElections.length > 0) {\n          _this.setState({\n            newElections: newElections\n          });\n        }\n      }\n\n      console.log(_this.state.newElections);\n    };\n\n    _this.updateElectionState = function (value, election) {\n      _this.setState({\n        isElectionSelected: value,\n        selectedElection: election\n      });\n    };\n\n    _this.initialState = function () {\n      _this.setState({\n        isElectionSelected: false,\n        selectedElection: null\n      });\n    };\n\n    _this.componentWillUnmount = function () {\n      clearInterval(_this.state.currentElectionInterval);\n\n      _this.setState({\n        elections: null,\n        electionsData: null,\n        isElectionSelected: false,\n        selectedElection: null,\n        newElections: null,\n        currentElectionInterval: null\n      });\n    };\n\n    _this.state = {\n      elections: null,\n      electionsData: null,\n      isElectionSelected: false,\n      selectedElection: null,\n      newElections: null,\n      currentElectionInterval: null,\n      candidateRequestCount: 0,\n      candidateRequestElection: null,\n      loaderStart: null\n    };\n    return _this;\n  }\n\n  _createClass(CandidateNomineeRequest, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(\"CandidateNomineeRequest\");\n      var hide = {\n        display: 'none'\n      };\n      var show = {\n        display: 'block'\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Fade, {\n        in: this.state.loaderStart === true,\n        unmountOnExit: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        className: \"loaderDiv1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CircularProgress, {\n        className: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        style: {\n          height: \"500px\",\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: this.state.isElectionSelected ? hide : show,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }\n      }, this.state.newElections && /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }\n      }, this.state.newElections.map(function (item, index) {\n        return /*#__PURE__*/React.createElement(ElectionCard, {\n          electionData: item[0],\n          key: index,\n          updateElectionState: _this2.updateElectionState,\n          username: _this2.props.username,\n          userObject: _this2.props.userObject,\n          electionHash: item[1],\n          candidateHash: _this2.props.candidateHash,\n          candidateRequestElection: _this2.state.candidateRequestElection,\n          candidateRequestCount: _this2.state.candidateRequestCount,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 33\n          }\n        });\n      })))));\n    }\n  }]);\n\n  return CandidateNomineeRequest;\n}(Component);\n\nexport { CandidateNomineeRequest as default };","map":{"version":3,"sources":["/home/utkarsh/study2/proj/DigiVote/client/src/Candidate/CandidateNomineeRequest.jsx"],"names":["React","Component","ElectionCard","Grid","ipfsFetcher","Fade","CircularProgress","CandidateNomineeRequest","props","componentWillMount","setState","loaderStart","contract","userObject","elections","electionsData","length","methods","electionsCount","call","then","res","catch","console","error","i","result","getElections","electionData","push","currentElectionInterval","setInterval","updateCurrentElection","candidateRequestCount","candidateRequestElection","candidateRequestsCount","username","requestObject","getRequest","log","state","newElections","ICRD","Date","FCRD","updateElectionState","value","election","isElectionSelected","selectedElection","initialState","componentWillUnmount","clearInterval","hide","display","show","height","width","map","item","index","candidateHash"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ElectionCard from '../Elections/ElectionCard'\nimport Grid from '@material-ui/core/Grid';\nimport { ipfsFetcher } from '../ipfsStore';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default class CandidateNomineeRequest extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            elections:null,\n            electionsData : null,\n            isElectionSelected : false,\n            selectedElection : null,\n            newElections : null,\n            currentElectionInterval : null,\n            candidateRequestCount : 0,\n            candidateRequestElection : null,\n            loaderStart : null\n        }\n    }\n\n    componentWillMount = async() => {\n\n        this.setState({ loaderStart : true })\n        \n        const {contract} = this.props.userObject\n        let elections = [],\n            electionsData = [],\n            length = 0;\n        \n        await contract.methods.electionsCount().call()\n        .then(res => length = res)\n        .catch(console.error)\n\n        for(let i=0;i<length;i++){\n\n            let result\n             await contract.methods.getElections(i).call()\n            .then(res => result = res)\n            .catch(console.error)\n\n            let electionData = await ipfsFetcher(result)\n            elections.push(result)\n            electionsData.push(electionData)\n\n        }\n\n        //setting an interval for update the new Election every 5sec \n        let  currentElectionInterval = setInterval(this.updateCurrentElection, 5000)\n\n\n        let candidateRequestCount = 0,\n            candidateRequestElection = []\n\n        await contract.methods.candidateRequestsCount(this.props.username).call()\n        .then(res => candidateRequestCount = res)\n        .catch(console.error)\n\n        for(let i=0;i<candidateRequestCount;i++){\n\n            let requestObject\n            await contract.methods.getRequest(this.props.username, i).call()\n            .then(res => requestObject = res)\n            .catch(console.error)\n\n            candidateRequestElection.push(requestObject[1])\n        }\n\n        this.setState({\n            elections,\n            electionsData,\n            currentElectionInterval,\n            candidateRequestCount,\n            candidateRequestElection,\n            loaderStart : false\n        })\n\n        console.log(this.state.electionsData)\n       \n    }\n\n    //INterbal function for showing only those Election to the candidate which are now open to register the candidate\n    updateCurrentElection = () => {\n         \n        let newElections = [],\n            length = this.state.electionsData.length\n\n        if(length){\n            for(let i=0; i< length; i++){\n\n                let ICRD = new Date(this.state.electionsData[i].ICRD)\n                let FCRD = new Date(this.state.electionsData[i].FCRD)\n    \n                if((new Date() >= ICRD) && (new Date() <= FCRD)){\n                    newElections.push([this.state.electionsData[i], this.state.elections[i]])\n                }\n            }\n    \n            if(newElections.length > 0){\n                this.setState({\n                    newElections\n                })\n            }\n            \n        }\n        \n\n        console.log(this.state.newElections)\n    }\n\n    updateElectionState = (value, election) => {\n        this.setState({\n            isElectionSelected : value,\n            selectedElection : election\n        })\n    }\n\n    initialState = () => {\n        this.setState({\n            isElectionSelected : false,\n            selectedElection : null\n        })\n    }\n\n    componentWillUnmount = () => {\n        clearInterval(this.state.currentElectionInterval)\n        this.setState({\n            elections:null,\n            electionsData : null,\n            isElectionSelected : false,\n            selectedElection : null,\n            newElections : null,\n            currentElectionInterval : null\n        })\n    }\n  \n\n    render(){\n       \n        console.log(\"CandidateNomineeRequest\")\n        let hide = {\n            display : 'none'\n        } \n\n        let show = {\n            display : 'block'\n        }\n\n   \n        return(\n            <div>\n                <Fade\n                    in={this.state.loaderStart === true}\n                    unmountOnExit\n                >\n                    <Grid \n                        container \n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        className=\"loaderDiv1\"\n                    >\n                        <CircularProgress className=\"loader\"/>\n                    </Grid>\n                </Fade>\n                <Grid \n                container \n                style={{\n                  height : \"500px\",\n                  width : \"100%\"\n                }}\n                >\n                    <div style={this.state.isElectionSelected ? hide : show}>\n                    {\n                        this.state.newElections &&\n                        <Grid container >\n                            { this.state.newElections.map((item, index) =>\n                                <ElectionCard \n                                    electionData={item[0]} \n                                    key={index} \n                                    updateElectionState={this.updateElectionState}\n                                    username={this.props.username} \n                                    userObject={this.props.userObject}  \n                                    electionHash={item[1]} \n                                    candidateHash={this.props.candidateHash}\n                                    candidateRequestElection={this.state.candidateRequestElection}\n                                    candidateRequestCount={this.state.candidateRequestCount}\n                                />\n                            )}\n                        </Grid> \n                    }\n                    </div>\n                </Grid>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}