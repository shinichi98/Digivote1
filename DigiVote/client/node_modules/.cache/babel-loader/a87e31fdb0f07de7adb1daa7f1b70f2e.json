{"ast":null,"code":"import _regeneratorRuntime from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/utkarsh/study2/proj/DigiVote/client/src/Voter/VoterHome.jsx\";\nimport React, { Component } from 'react';\nimport VerifyVoter from './VerifyVoter';\nimport VotingArena from './VotingArena';\nimport { ipfsSender } from '../ipfsStore';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid'; //import {ipfsSender} from '../ipfsStore'\n//import {accountCreator} from '../utils/AccountCreater'\n\nvar Voter = /*#__PURE__*/function (_Component) {\n  _inherits(Voter, _Component);\n\n  function Voter(props) {\n    var _this;\n\n    _classCallCheck(this, Voter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Voter).call(this, props));\n\n    _this.passwordGenrator = function () {\n      return Math.random().toString(36).slice(-8);\n    };\n\n    _this.updateVoterVerification = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var password, AadhaarHash;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loaderStart: true\n              }); //genrating the random password\n\n\n              password = _this.passwordGenrator(); //calling for creating the account for voter\n\n              _context.next = 4;\n              return _this.props.accountCreator(password);\n\n            case 4:\n              _context.next = 6;\n              return ipfsSender(_this.state.AadhaarObject);\n\n            case 6:\n              AadhaarHash = _context.sent;\n              console.log(_this.props.acc);\n              console.log(AadhaarHash); //unlock the account fortransaction\n\n              _this.props.userObject.web3.eth.personal.unlockAccount(_this.props.acc, password, 600).then(console.log(\"Voter Account Unlock!\")); //store the Voter credentails into contract\n\n\n              _context.next = 12;\n              return _this.props.userObject.contract.methods.addVoterAccount(AadhaarHash, _this.props.acc, password).send({\n                from: _this.props.acc,\n                gas: 6721975\n              }).then(function (receipt) {\n                console.log(receipt);\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 12:\n              _this.setState({\n                voterVerified: true,\n                AadhaarHash: AadhaarHash,\n                loaderStart: false\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.updateAadhaarData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(AadhaarObject) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this.setState({\n                  AadhaarObject: AadhaarObject //, AadhaarHash \n\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      voterVerified: false,\n      AadhaarObject: null,\n      AadhaarHash: null,\n      loaderStart: false\n    };\n    return _this;\n  } //function for creating random password\n\n\n  _createClass(Voter, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"Voter Home\");\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Fade, {\n        in: this.state.loaderStart === true,\n        unmountOnExit: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        className: \"loaderDiv1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CircularProgress, {\n        className: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      }))), this.state.voterVerified ? /*#__PURE__*/React.createElement(VotingArena, {\n        userObject: this.props.userObject,\n        AadhaarHash: this.state.AadhaarHash,\n        AadhaarObject: this.state.AadhaarObject,\n        selectedElection: this.props.selectedElection,\n        updateResetAll: this.props.updateResetAll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 23\n        }\n      }) : /*#__PURE__*/React.createElement(VerifyVoter, {\n        userObject: this.props.userObject,\n        selectedElection: this.props.selectedElection,\n        AadhaarObject: this.state.AadhaarObject,\n        updateAadhaarData: this.updateAadhaarData,\n        updateVoterVerification: this.updateVoterVerification,\n        updateHomeState: this.props.updateHomeState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 23\n        }\n      }));\n    }\n  }]);\n\n  return Voter;\n}(Component);\n\nexport { Voter as default };","map":{"version":3,"sources":["/home/utkarsh/study2/proj/DigiVote/client/src/Voter/VoterHome.jsx"],"names":["React","Component","VerifyVoter","VotingArena","ipfsSender","Fade","CircularProgress","Grid","Voter","props","passwordGenrator","Math","random","toString","slice","updateVoterVerification","setState","loaderStart","password","accountCreator","state","AadhaarObject","AadhaarHash","console","log","acc","userObject","web3","eth","personal","unlockAccount","then","contract","methods","addVoterAccount","send","from","gas","receipt","catch","error","voterVerified","updateAadhaarData","selectedElection","updateResetAll","updateHomeState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport VerifyVoter from './VerifyVoter'\nimport VotingArena from './VotingArena'\nimport { ipfsSender } from '../ipfsStore';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n//import {ipfsSender} from '../ipfsStore'\n//import {accountCreator} from '../utils/AccountCreater'\n\nexport default class Voter extends Component{\n    \n    constructor(props){\n        super(props)\n        this.state = {\n            voterVerified : false,\n            AadhaarObject : null,\n            AadhaarHash : null,\n            loaderStart : false\n        }\n    }\n\n    //function for creating random password\n    passwordGenrator = () => {\n        return Math.random().toString(36).slice(-8)\n    }\n\n    //update funciton for status of verification of Voter\n    updateVoterVerification = async() => {\n        this.setState({ loaderStart : true })\n\n        //genrating the random password\n        let password = this.passwordGenrator()\n\n        //calling for creating the account for voter\n        await this.props.accountCreator(password)\n\n        //genrate IPFS hash for the Voters's Aadhaar card details\n        let AadhaarHash = await ipfsSender(this.state.AadhaarObject)\n\n        console.log(this.props.acc)\n        console.log(AadhaarHash)\n\n        //unlock the account fortransaction\n        this.props.userObject.web3.eth.personal.unlockAccount(this.props.acc, password, 600)\n        .then(console.log(\"Voter Account Unlock!\"))\n\n        //store the Voter credentails into contract\n        await this.props.userObject.contract.methods.addVoterAccount(AadhaarHash, this.props.acc, password).send({from: this.props.acc,gas:6721975})\n        .then((receipt) => {\n          console.log(receipt)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n\n\n        this.setState({\n            voterVerified : true,\n            AadhaarHash,\n            loaderStart : false\n        })\n        \n    }\n\n\n    updateAadhaarData = async(AadhaarObject) => {\n\n        this.setState({\n            AadhaarObject //, AadhaarHash \n        })\n\n    }\n\n    render(){\n        console.log(\"Voter Home\")\n        return(\n            <div>\n                <Fade\n                    in={this.state.loaderStart === true}\n                    unmountOnExit\n                >\n                    <Grid \n                        container \n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        className=\"loaderDiv1\"\n                    >\n                        <CircularProgress className=\"loader\"/>\n                    </Grid>\n                </Fade>\n                {this.state.voterVerified \n                    ? <VotingArena \n                        userObject={this.props.userObject}\n                        AadhaarHash={this.state.AadhaarHash}\n                        AadhaarObject={this.state.AadhaarObject}\n                        selectedElection={this.props.selectedElection}\n                        updateResetAll={this.props.updateResetAll}\n                        /> \n                    : <VerifyVoter \n                        userObject={this.props.userObject}\n                        selectedElection={this.props.selectedElection}\n                        AadhaarObject={this.state.AadhaarObject}\n                        updateAadhaarData={this.updateAadhaarData}\n                        updateVoterVerification={this.updateVoterVerification}\n                        updateHomeState={this.props.updateHomeState}\n                        />\n                }\n            </div>\n            \n        )\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}