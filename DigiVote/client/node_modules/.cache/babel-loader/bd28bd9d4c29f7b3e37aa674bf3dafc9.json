{"ast":null,"code":"import _regeneratorRuntime from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/utkarsh/study2/proj/DigiVote/client/src/Candidate/CandidateLogin.jsx\";\nimport React, { Component } from 'react';\nimport { ipfsFetcher, ipfsSender } from '../ipfsStore';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Home from '@material-ui/icons/Home';\nimport { MuiPickersUtilsProvider, TimePicker, DatePicker } from 'material-ui-pickers';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nvar CandidateLogin = /*#__PURE__*/function (_Component) {\n  _inherits(CandidateLogin, _Component);\n\n  function CandidateLogin(props) {\n    var _this;\n\n    _classCallCheck(this, CandidateLogin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CandidateLogin).call(this, props));\n\n    _this.SignUp = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var _this$props$userObjec, contract, accounts, isUsernamePresent, CredentialsData, ipfsCredentialsHash, PersonalData, ipfsPersonalHash, result;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.setState({\n                  loaderStart: true\n                });\n\n                event.preventDefault(); //checking for the empty textfiled or entry\n\n                if (!((_this.state.username && _this.state.name && _this.state.electionParty && _this.state.citizenship && _this.state.age && _this.state.DOB && _this.state.mobile && _this.state.password && _this.state.constituency) == \"\")) {\n                  _context.next = 7;\n                  break;\n                }\n\n                alert(\"Enter all the Details First !!\");\n\n                _this.setState({\n                  isSignUp: false,\n                  loaderStart: false\n                });\n\n                _context.next = 38;\n                break;\n\n              case 7:\n                _this$props$userObjec = _this.props.userObject, contract = _this$props$userObjec.contract, accounts = _this$props$userObjec.accounts; // //calling function by providing the password and returns the Account Address\n                // await this.props.userObject.accountCreator(\"test\");\n                // console.log(this.props.userObject.acc);\n                //-------------------Calling fucntion for the Candidate Credentials Data------------------\n                //checking of username is alerady present or not\n\n                isUsernamePresent = false;\n                _context.next = 11;\n                return contract.methods.findCandidate(_this.state.username).call().then(function (res) {\n                  return isUsernamePresent = res;\n                }).catch(console.error);\n\n              case 11:\n                if (isUsernamePresent) {\n                  _context.next = 35;\n                  break;\n                }\n\n                CredentialsData = {\n                  Username: _this.state.username,\n                  Password: _this.state.password,\n                  Address: accounts[1] //this.state.accAddress\n\n                }; //calling the promise by providing the data to convert it to hash\n\n                _context.next = 15;\n                return ipfsSender(CredentialsData);\n\n              case 15:\n                ipfsCredentialsHash = _context.sent;\n\n                _this.setState({\n                  ipfsCredentialsHash: ipfsCredentialsHash\n                });\n\n                console.log(_this.state.ipfsCredentialsHash); //function for sending hash to the blockchain\n\n                _context.next = 20;\n                return contract.methods.setCandidateCredentials(CredentialsData.Username, _this.state.ipfsCredentialsHash).send({\n                  from: accounts[2],\n                  gas: 6721975\n                }).then(function (receipt) {\n                  console.log(receipt);\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 20:\n                //-------------------Calling fucntion for the Candidate Personal Data------------------\n                PersonalData = {\n                  Username: _this.state.username,\n                  Account: accounts[1],\n                  //this.state.accAddress\n                  Name: _this.state.name,\n                  ElectionParty: _this.state.electionParty,\n                  Mobile: _this.state.mobile,\n                  Age: _this.state.age,\n                  constituency: _this.state.constituency,\n                  Father_Name: _this.state.fatherName,\n                  Mother_Name: _this.state.motherName,\n                  DOB: _this.state.DOB.toString(),\n                  Party_Symbol: _this.state.partySymbol,\n                  Citizenship: _this.state.citizenship,\n                  Education_Qualification: _this.state.education\n                }; //calling the promise by providing the data to convert it to hash\n\n                _context.next = 23;\n                return ipfsSender(PersonalData);\n\n              case 23:\n                ipfsPersonalHash = _context.sent;\n\n                _this.setState({\n                  ipfsPersonalHash: ipfsPersonalHash\n                });\n\n                console.log(_this.state.ipfsPersonalHash); //function for sending hash to the blockchain\n\n                _context.next = 28;\n                return contract.methods.setCandidatePersonal(PersonalData.Username, _this.state.ipfsPersonalHash).send({\n                  from: accounts[2],\n                  gas: 6721975\n                }).then(function (receipt) {\n                  console.log(receipt);\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 28:\n                _context.next = 30;\n                return contract.methods.getCandidatePersonal(PersonalData.Username).call().then(function (res) {\n                  return result = res;\n                }).catch(console.error);\n\n              case 30:\n                console.log(result); ////calling the promise by providing the hash to convert it to data\n                //let ipfsPersonalData = await ipfsFetcher(result)\n\n                _this.setState({\n                  //ipfsPersonalData,\n                  isSignUp: true,\n                  goToSignUp: false,\n                  loaderStart: false\n                });\n\n                alert(\"Thank You for Register !\"); //console.log(this.state.ipfsPersonalData)\n\n                _context.next = 38;\n                break;\n\n              case 35:\n                _this.setState({\n                  loaderStart: false\n                });\n\n                console.log(\"Username is Already Excist\");\n                alert(\"Username is already excist\");\n\n              case 38:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.SignIn = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var _this$props$userObjec2, contract, web3, result, hash, ipfsCredentailsData, ipfsPersonalHash;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this.setState({\n                  loaderStart: true\n                }); //checking if the entered value is empty\n\n\n                if ((_this.state.inputUsername && _this.state.inputPassword) == \"\") {\n                  alert(\"Please Enter something !!\");\n\n                  _this.setState({\n                    loaderStart: false\n                  });\n                }\n\n                event.preventDefault();\n                _this$props$userObjec2 = _this.props.userObject, contract = _this$props$userObjec2.contract, web3 = _this$props$userObjec2.web3;\n                _context2.next = 6;\n                return contract.methods.findCandidate(_this.state.inputUsername).call().then(function (res) {\n                  return result = res;\n                }).catch(console.error);\n\n              case 6:\n                console.log(result);\n\n                if (!result) {\n                  _context2.next = 34;\n                  break;\n                }\n\n                _context2.next = 10;\n                return contract.methods.getCandidateCredentials(_this.state.inputUsername).call().then(function (res) {\n                  return hash = res;\n                }).catch(console.error);\n\n              case 10:\n                _context2.next = 12;\n                return ipfsFetcher(hash);\n\n              case 12:\n                ipfsCredentailsData = _context2.sent;\n\n                _this.setState({\n                  ipfsCredentailsData: ipfsCredentailsData\n                });\n\n                console.log(ipfsCredentailsData);\n\n                if (!(ipfsCredentailsData.Password === _this.state.inputPassword)) {\n                  _context2.next = 29;\n                  break;\n                }\n\n                _context2.next = 18;\n                return web3.eth.personal.unlockAccount(ipfsCredentailsData.Address, ipfsCredentailsData.Password, 600).then(console.log(\"Unlock\"));\n\n              case 18:\n                _context2.next = 20;\n                return contract.methods.getCandidatePersonal(_this.state.inputUsername).call().then(function (res) {\n                  return ipfsPersonalHash = res;\n                }).catch(console.error);\n\n              case 20:\n                _this.setState({\n                  isUnlock: true,\n                  ipfsPersonalHash: ipfsPersonalHash\n                });\n\n                console.log(_this.state.isUnlock);\n\n                _this.props.updateCandidateData(_this.state.ipfsPersonalHash, _this.state.inputUsername);\n\n                _this.props.loginUpdate(true);\n\n                console.log(_this.state.inputUsername);\n\n                _this.setState({\n                  loaderStart: false\n                });\n\n                console.log(\"You are Login :)\");\n                _context2.next = 32;\n                break;\n\n              case 29:\n                _this.setState({\n                  loaderStart: false\n                });\n\n                console.log(\"Invalid Password\");\n                alert(\"Invalid Password, Try Again !!\");\n\n              case 32:\n                _context2.next = 37;\n                break;\n\n              case 34:\n                _this.setState({\n                  loaderStart: false\n                });\n\n                console.log(\"Try Again , Invalid Username\");\n                alert(\"Invalid Username, Try Again !\");\n\n              case 37:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.updateInputUsername = function (evt) {\n      return _this.setState({\n        inputUsername: evt.target.value\n      });\n    };\n\n    _this.updateInputPassword = function (evt) {\n      return _this.setState({\n        inputPassword: evt.target.value\n      });\n    };\n\n    _this.updateUsername = function (evt) {\n      return _this.setState({\n        username: evt.target.value\n      });\n    };\n\n    _this.updatePassword = function (evt) {\n      return _this.setState({\n        password: evt.target.value\n      });\n    };\n\n    _this.updateName = function (evt) {\n      return _this.setState({\n        name: evt.target.value\n      });\n    };\n\n    _this.updateAge = function (evt) {\n      return _this.setState({\n        age: evt.target.value\n      });\n    };\n\n    _this.updateFatherName = function (evt) {\n      return _this.setState({\n        fatherName: evt.target.value\n      });\n    };\n\n    _this.updateMotherName = function (evt) {\n      return _this.setState({\n        motherName: evt.target.value\n      });\n    };\n\n    _this.updateMobile = function (evt) {\n      return _this.setState({\n        mobile: evt.target.value\n      });\n    };\n\n    _this.updateCitizenship = function (evt) {\n      return _this.setState({\n        citizenship: evt.target.value\n      });\n    };\n\n    _this.updateEducation = function (evt) {\n      return _this.setState({\n        education: evt.target.value\n      });\n    };\n\n    _this.updateConsitituency = function (evt) {\n      return _this.setState({\n        constituency: evt.target.value\n      });\n    };\n\n    _this.updateDOB = function (val) {\n      return _this.setState({\n        DOB: val\n      });\n    };\n\n    _this.updateElectionParty = function (evt) {\n      return _this.setState({\n        electionParty: evt.target.value\n      });\n    };\n\n    _this.updatePartySymbol = function (evt) {\n      return _this.setState({\n        partySymbol: evt.target.files[0]\n      });\n    };\n\n    _this.state = {\n      inputUsername: \"\",\n      inputPassword: \"\",\n      username: \"\",\n      password: \"\",\n      name: \"\",\n      electionParty: \"\",\n      age: 0,\n      mobile: \"\",\n      constituency: \"\",\n      fatherName: \"\",\n      motherName: \"\",\n      DOB: new Date(),\n      partySymbol: null,\n      citizenship: \"\",\n      education: \"\",\n      ipfsCredentialsHash: null,\n      ipfsCredentailsData: null,\n      ipfsPersonalHash: null,\n      ipfsPersonalData: null,\n      isUnlock: false,\n      isSignUp: false,\n      goToSignUp: false,\n      loaderStart: false\n    };\n    return _this;\n  } //function for Candidate's SignUp (checking for username is not done yet)\n\n\n  _createClass(CandidateLogin, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(\"CandidateLogin\");\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"testClass\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Fade, {\n        in: this.state.loaderStart === true,\n        unmountOnExit: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        className: \"loaderDiv1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CircularProgress, {\n        className: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        className: \"testClass\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }\n      }, this.state.goToSignUp ? /*#__PURE__*/React.createElement(Paper, {\n        elevation: 2,\n        className: \"RegisterCard2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 27\n        }\n      }, \"Candidate Register\"), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        name: \"username\",\n        id: \"username\",\n        label: \"Username\",\n        value: this.state.username,\n        onChange: function onChange(evt) {\n          return _this2.updateUsername(evt);\n        },\n        margin: \"normal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        name: \"name\",\n        id: \"name\",\n        label: \"Name\",\n        value: this.state.name,\n        onChange: function onChange(evt) {\n          return _this2.updateName(evt);\n        },\n        margin: \"normal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        name: \"ElelctionParty\",\n        id: \"ElelctionParty\",\n        label: \"Elelction Party\",\n        value: this.state.electionParty,\n        onChange: function onChange(evt) {\n          return _this2.updateElectionParty(evt);\n        },\n        margin: \"normal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        name: \"FatherName\",\n        id: \"FatherName\",\n        label: \"Father Name\",\n        value: this.state.fatherName,\n        onChange: function onChange(evt) {\n          return _this2.updateFatherName(evt);\n        },\n        margin: \"normal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        name: \"MotherName\",\n        id: \"MotherName\",\n        label: \"Mother Name\",\n        value: this.state.motherName,\n        onChange: function onChange(evt) {\n          return _this2.updateMotherName(evt);\n        },\n        margin: \"normal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        name: \"Citizenship\",\n        id: \"Citizenship\",\n        label: \"Citizenship\",\n        value: this.state.citizenship,\n        onChange: function onChange(evt) {\n          return _this2.updateCitizenship(evt);\n        },\n        margin: \"normal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        name: \"Age\",\n        id: \"Age\",\n        label: \"Age\",\n        value: this.state.age,\n        onChange: function onChange(evt) {\n          return _this2.updateAge(evt);\n        },\n        margin: \"normal\",\n        type: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: \"DateNTimeCenter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(DatePicker, {\n        required: true,\n        margin: \"normal\",\n        label: \"Date of Birth\",\n        value: this.state.DOB,\n        onChange: this.updateDOB,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 37\n        }\n      })))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        name: \"Mobile\",\n        id: \"Mobile\",\n        label: \"Mobile\",\n        value: this.state.mobile,\n        onChange: function onChange(evt) {\n          return _this2.updateMobile(evt);\n        },\n        margin: \"normal\",\n        type: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        name: \"Password\",\n        id: \"Password\",\n        label: \"Password\",\n        value: this.state.password,\n        onChange: function onChange(evt) {\n          return _this2.updatePassword(evt);\n        },\n        margin: \"normal\",\n        type: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        name: \"Education\",\n        id: \"Education\",\n        label: \"Education Qualification\",\n        value: this.state.education,\n        onChange: function onChange(evt) {\n          return _this2.updateEducation(evt);\n        },\n        margin: \"normal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        name: \"Constituency\",\n        id: \"Constituency\",\n        label: \"Constituency\",\n        value: this.state.constituency,\n        onChange: function onChange(evt) {\n          return _this2.updateConsitituency(evt);\n        },\n        margin: \"normal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        style: {\n          marginTop: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        accept: \"image/*\",\n        id: \"DP\",\n        name: \"DP\",\n        type: \"file\",\n        onChange: function onChange(evt) {\n          return _this2.updatePartySymbol(evt);\n        },\n        style: {\n          display: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"DP\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 33\n        }\n      }, \"Upload the ElectionParty Symbol\", /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        component: \"span\",\n        style: {\n          marginLeft: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 35\n        }\n      }, \"Upload\")))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        style: {\n          marginTop: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          marginTop: \"60px\",\n          margin: \"5px\"\n        },\n        onClick: this.SignUp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 31\n        }\n      }, \"SignUp\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        style: {\n          marginTop: \"60px\",\n          margin: \"5px\"\n        },\n        onClick: function onClick() {\n          return _this2.setState({\n            goToSignUp: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 31\n        }\n      }, \"Back\")))) : /*#__PURE__*/React.createElement(Paper, {\n        elevation: 2,\n        className: \"loginCard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 27\n        }\n      }, \"Candidate Login\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.SignIn,\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        name: \"username\",\n        id: \"username\",\n        label: \"Username\",\n        value: this.state.inputUsername,\n        onChange: function onChange(evt) {\n          return _this2.updateInputUsername(evt);\n        },\n        margin: \"normal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        name: \"password\",\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        value: this.state.inputPassword,\n        onChange: function onChange(evt) {\n          return _this2.updateInputPassword(evt);\n        },\n        margin: \"normal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          marginTop: \"30px\",\n          margin: \"5px\"\n        },\n        onClick: this.SignIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 29\n        }\n      }, \"Login\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        style: {\n          marginTop: \"30px\",\n          margin: \"5px\"\n        },\n        onClick: function onClick() {\n          return _this2.setState({\n            goToSignUp: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 29\n        }\n      }, \"Register\")), /*#__PURE__*/React.createElement(Home, {\n        className: \"HomeIcon\",\n        onClick: function onClick() {\n          return _this2.props.updateHomeState(0, null);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 27\n        }\n      }))));\n    }\n  }]);\n\n  return CandidateLogin;\n}(Component);\n\nexport default CandidateLogin;","map":{"version":3,"sources":["/home/utkarsh/study2/proj/DigiVote/client/src/Candidate/CandidateLogin.jsx"],"names":["React","Component","ipfsFetcher","ipfsSender","Paper","Grid","TextField","Button","Typography","DateFnsUtils","Home","MuiPickersUtilsProvider","TimePicker","DatePicker","Fade","CircularProgress","CandidateLogin","props","SignUp","event","setState","loaderStart","preventDefault","state","username","name","electionParty","citizenship","age","DOB","mobile","password","constituency","alert","isSignUp","userObject","contract","accounts","isUsernamePresent","methods","findCandidate","call","then","res","catch","console","error","CredentialsData","Username","Password","Address","ipfsCredentialsHash","log","setCandidateCredentials","send","from","gas","receipt","PersonalData","Account","Name","ElectionParty","Mobile","Age","Father_Name","fatherName","Mother_Name","motherName","toString","Party_Symbol","partySymbol","Citizenship","Education_Qualification","education","ipfsPersonalHash","setCandidatePersonal","getCandidatePersonal","result","goToSignUp","SignIn","inputUsername","inputPassword","web3","getCandidateCredentials","hash","ipfsCredentailsData","eth","personal","unlockAccount","isUnlock","updateCandidateData","loginUpdate","updateInputUsername","evt","target","value","updateInputPassword","updateUsername","updatePassword","updateName","updateAge","updateFatherName","updateMotherName","updateMobile","updateCitizenship","updateEducation","updateConsitituency","updateDOB","val","updateElectionParty","updatePartySymbol","files","Date","ipfsPersonalData","marginTop","display","marginLeft","margin","updateHomeState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {ipfsFetcher, ipfsSender} from '../ipfsStore'\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Home from '@material-ui/icons/Home';\nimport { MuiPickersUtilsProvider, TimePicker, DatePicker } from 'material-ui-pickers';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass CandidateLogin extends Component{   \n\n    constructor(props){\n        super(props)\n        this.state = {\n            inputUsername         :\"\",\n            inputPassword         :\"\",\n            username              : \"\",\n            password              : \"\",\n            name                  : \"\",\n            electionParty         : \"\",\n            age                   : 0,\n            mobile                : \"\",\n            constituency          : \"\",\n            fatherName            : \"\",\n            motherName            : \"\",\n            DOB                   : new Date(),\n            partySymbol           : null,\n            citizenship           : \"\",\n            education             : \"\",\n            ipfsCredentialsHash   : null,\n            ipfsCredentailsData   : null,\n            ipfsPersonalHash      : null,\n            ipfsPersonalData      : null,\n            isUnlock              : false,\n            isSignUp              : false,\n            goToSignUp            : false,\n            loaderStart           : false\n        }\n    }\n    \n\n  //function for Candidate's SignUp (checking for username is not done yet)\n  SignUp = async(event) => {\n\n    this.setState({ loaderStart : true })\n\n    event.preventDefault()\n\n    //checking for the empty textfiled or entry\n    if((this.state.username && this.state.name && this.state.electionParty && this.state.citizenship && this.state.age && this.state.DOB && this.state.mobile && this.state.password && this.state.constituency) == \"\"){\n      alert(\"Enter all the Details First !!\")\n      this.setState({ isSignUp : false, loaderStart : false })\n    }else{\n      const {contract, accounts} = this.props.userObject\n      // //calling function by providing the password and returns the Account Address\n      // await this.props.userObject.accountCreator(\"test\");\n\n      // console.log(this.props.userObject.acc);\n\n      //-------------------Calling fucntion for the Candidate Credentials Data------------------\n\n      //checking of username is alerady present or not\n      let isUsernamePresent = false\n\n      await  contract.methods.findCandidate(this.state.username).call()\n      .then(res => isUsernamePresent = res)\n      .catch(console.error)\n\n      if(!isUsernamePresent){\n\n        let CredentialsData = {\n          Username : this.state.username,\n          Password : this.state.password,\n          Address : accounts[1] //this.state.accAddress\n        }  \n    \n        //calling the promise by providing the data to convert it to hash\n        let ipfsCredentialsHash = await ipfsSender(CredentialsData)\n        this.setState({ipfsCredentialsHash})\n        console.log(this.state.ipfsCredentialsHash)\n    \n        //function for sending hash to the blockchain\n        await contract.methods.setCandidateCredentials(CredentialsData.Username, this.state.ipfsCredentialsHash).send({from: accounts[2],gas:6721975})\n        .then((receipt) => {\n          console.log(receipt)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    \n        //-------------------Calling fucntion for the Candidate Personal Data------------------\n        let PersonalData = {\n          Username                  : this.state.username,\n          Account                   : accounts[1], //this.state.accAddress\n          Name                      : this.state.name,\n          ElectionParty             : this.state.electionParty,\n          Mobile                    : this.state.mobile,\n          Age                       : this.state.age,\n          constituency              : this.state.constituency,\n          Father_Name               : this.state.fatherName,\n          Mother_Name               : this.state.motherName,\n          DOB                       : this.state.DOB.toString(),\n          Party_Symbol              : this.state.partySymbol,\n          Citizenship               : this.state.citizenship,\n          Education_Qualification   : this.state.education\t\n        }  \n    \n        //calling the promise by providing the data to convert it to hash\n        let ipfsPersonalHash = await ipfsSender(PersonalData)\n        this.setState({ipfsPersonalHash})\n        console.log(this.state.ipfsPersonalHash)\n    \n        //function for sending hash to the blockchain\n        await contract.methods.setCandidatePersonal(PersonalData.Username,this.state.ipfsPersonalHash).send({from: accounts[2],gas:6721975})\n        .then((receipt) => {\n          console.log(receipt)\n        })\n        .catch((error) => {\n          console.log(error)\n        });\n    \n    \n        //-------------------------------------Functions for retireving the Data from the Blockchain-----------------\n        //calling for fetching the hash from the blockchain.\n        let result;\n        await contract.methods.getCandidatePersonal(PersonalData.Username).call()\n        .then((res) => result = res)\n        .catch(console.error)\n    \n        console.log(result);\n    \n        ////calling the promise by providing the hash to convert it to data\n        //let ipfsPersonalData = await ipfsFetcher(result)\n        this.setState({ //ipfsPersonalData,\n                          isSignUp : true, \n                          goToSignUp : false, \n                          loaderStart : false\n        })\n        alert(\"Thank You for Register !\")\n        //console.log(this.state.ipfsPersonalData)\n    \n      }else{\n        this.setState({ loaderStart : false })\n        console.log(\"Username is Already Excist\")\n        alert(\"Username is already excist\")\n      }\n      \n    }\n\n    \n\n\n  }\n \n  SignIn = async(event) => {\n\n    this.setState({ loaderStart : true })\n\n    //checking if the entered value is empty\n    if((this.state.inputUsername && this.state.inputPassword) == \"\"){\n      alert(\"Please Enter something !!\")\n      this.setState({ loaderStart : false})\n    }\n\n    event.preventDefault();\n\n    const {contract, web3} = this.props.userObject\n    let result\n\n    await contract.methods.findCandidate(this.state.inputUsername).call()\n    .then((res) => result = res)\n    .catch(console.error)\n    console.log(result)\n\n    if(result){\n\n      let hash;\n      await contract.methods.getCandidateCredentials(this.state.inputUsername).call()\n      .then((res) => hash = res)\n      .catch(console.error)\n\n      //this.setState({isUnlock:true}) //try for debugging please remove it after debugging\n  \n      //calling the promise by providing the hash to convert it to data\n      let ipfsCredentailsData = await ipfsFetcher(hash)\n      this.setState({ipfsCredentailsData})\n      console.log(ipfsCredentailsData)\n\n      if(ipfsCredentailsData.Password === this.state.inputPassword){\n            await web3.eth.personal.unlockAccount(ipfsCredentailsData.Address,ipfsCredentailsData.Password,600)\n            .then(console.log(\"Unlock\"))\n            \n\n            let ipfsPersonalHash;\n            await contract.methods.getCandidatePersonal(this.state.inputUsername).call()\n            .then(res => ipfsPersonalHash = res)\n            .catch(console.error)\n\n            this.setState({isUnlock:true, ipfsPersonalHash})\n            console.log(this.state.isUnlock)\n\n            \n            this.props.updateCandidateData(this.state.ipfsPersonalHash, this.state.inputUsername)\n            this.props.loginUpdate(true)\n            console.log(this.state.inputUsername)\n\n            this.setState({ loaderStart : false })\n            console.log(\"You are Login :)\")\n      }else{\n        this.setState({ loaderStart : false })\n        console.log(\"Invalid Password\")\n        alert(\"Invalid Password, Try Again !!\")\n      }\n\n  \n    }else{\n      this.setState({ loaderStart : false })\n      console.log(\"Try Again , Invalid Username\")\n      alert(\"Invalid Username, Try Again !\")\n    } \n    \n  }\n\n  updateInputUsername = (evt) => this.setState({   inputUsername: evt.target.value  }); \n\n  updateInputPassword = (evt) => this.setState({  inputPassword: evt.target.value  });\n\n  updateUsername = (evt) => this.setState({  username: evt.target.value  });\n\n  updatePassword = (evt) => this.setState({  password: evt.target.value  });\n\n  updateName = (evt) => this.setState({  name: evt.target.value  });\n\n  updateAge = (evt) => this.setState({  age : evt.target.value  });\n  \n  updateFatherName = (evt) => this.setState({  fatherName: evt.target.value  });\n\n  updateMotherName = (evt) => this.setState({  motherName: evt.target.value  });\n\n  updateMobile = (evt) => this.setState({  mobile: evt.target.value  });\n\n  updateCitizenship = (evt) => this.setState({  citizenship: evt.target.value  });\n\n  updateEducation = (evt) => this.setState({  education: evt.target.value  });\n\n  updateConsitituency = (evt) => this.setState({  constituency: evt.target.value  });\n\n  updateDOB = (val) => this.setState({  DOB: val  });\n  \n  updateElectionParty = (evt) => this.setState({  electionParty: evt.target.value  });\n\n  updatePartySymbol = (evt) => this.setState({  partySymbol: evt.target.files[0]  });\n\n\n\n\n    render(){\n        console.log(\"CandidateLogin\")\n        return (\n\n              <div  className=\"testClass\">\n              <Fade\n                    in={this.state.loaderStart === true}\n                    unmountOnExit\n                >\n                    <Grid \n                        container \n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        className=\"loaderDiv1\"\n                    >\n                        <CircularProgress className=\"loader\"/>\n                    </Grid>\n                </Fade>\n              <Grid \n                container \n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                className=\"testClass\"\n                >\n                  {\n                    this.state.goToSignUp\n                      ? <Paper \n                          elevation={2}\n                          className=\"RegisterCard2\"\n                        >\n                          <Typography variant=\"h4\" gutterBottom>Candidate Register</Typography>\n                          <Grid container>\n                            <Grid container item xs={12}>\n                              <Grid item xs={4} >\n                                <TextField\n                                  required\n                                  name=\"username\"\n                                  id=\"username\"\n                                  label=\"Username\"\n                                  value={this.state.username}\n                                  onChange={evt => this.updateUsername(evt)}\n                                  margin=\"normal\"\n                                />\n                              </Grid>\n                              <Grid item xs={4} >\n                                <TextField\n                                  required\n                                  name=\"name\"\n                                  id=\"name\"\n                                  label=\"Name\"\n                                  value={this.state.name}\n                                  onChange={evt => this.updateName(evt)}\n                                  margin=\"normal\"\n                                />\n                              </Grid>\n                              <Grid item xs={4} >\n                                <TextField\n                                  required\n                                  name=\"ElelctionParty\"\n                                  id=\"ElelctionParty\"\n                                  label=\"Elelction Party\"\n                                  value={this.state.electionParty}\n                                  onChange={evt => this.updateElectionParty(evt)}\n                                  margin=\"normal\"\n                                />\n                              </Grid>\n                            </Grid>\n                            <Grid container item xs={12}>\n                              <Grid item xs={4} >\n                                <TextField\n                                  required\n                                  name=\"FatherName\"\n                                  id=\"FatherName\"\n                                  label=\"Father Name\"\n                                  value={this.state.fatherName}\n                                  onChange={evt => this.updateFatherName(evt)}\n                                  margin=\"normal\"\n                                />\n                              </Grid>\n                              <Grid item xs={4} >\n                                <TextField\n                                  required\n                                  name=\"MotherName\"\n                                  id=\"MotherName\"\n                                  label=\"Mother Name\"\n                                  value={this.state.motherName}\n                                  onChange={evt => this.updateMotherName(evt)}\n                                  margin=\"normal\"\n                                />\n                              </Grid>\n                              <Grid item xs={4} >\n                                <TextField\n                                  required\n                                  name=\"Citizenship\"\n                                  id=\"Citizenship\"\n                                  label=\"Citizenship\"\n                                  value={this.state.citizenship}\n                                  onChange={evt => this.updateCitizenship(evt)}\n                                  margin=\"normal\"\n                                />\n                              </Grid>\n                            </Grid>\n                            <Grid container item xs={12}>\n                              <Grid item xs={4} >\n                                <TextField\n                                  required\n                                  name=\"Age\"\n                                  id=\"Age\"\n                                  label=\"Age\"\n                                  value={this.state.age}\n                                  onChange={evt => this.updateAge(evt)}\n                                  margin=\"normal\"\n                                  type=\"number\"\n                                />\n                              </Grid>\n                              <Grid item xs={4} >\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                  <Grid container className=\"DateNTimeCenter\">\n                                    <DatePicker\n                                      required\n                                      margin=\"normal\"\n                                      label=\"Date of Birth\"\n                                      value={this.state.DOB}\n                                      onChange={this.updateDOB}\n                                    />\n                                  </Grid>\n                                </MuiPickersUtilsProvider>\n                              </Grid>\n                              <Grid item xs={4} >\n                                <TextField\n                                  required\n                                  name=\"Mobile\"\n                                  id=\"Mobile\"\n                                  label=\"Mobile\"\n                                  value={this.state.mobile}\n                                  onChange={evt => this.updateMobile(evt)}\n                                  margin=\"normal\"\n                                  type=\"number\"\n                                />\n                              </Grid>\n                            </Grid>\n                            <Grid container item xs={12}>\n                              <Grid item xs={4} >\n                                <TextField\n                                  required\n                                  name=\"Password\"\n                                  id=\"Password\"\n                                  label=\"Password\"\n                                  value={this.state.password}\n                                  onChange={evt => this.updatePassword(evt)}\n                                  margin=\"normal\"\n                                  type=\"password\"\n                                />\n                              </Grid>\n                              <Grid item xs={4} >\n                                <TextField\n                                  required\n                                  name=\"Education\"\n                                  id=\"Education\"\n                                  label=\"Education Qualification\"\n                                  value={this.state.education}\n                                  onChange={evt => this.updateEducation(evt)}\n                                  margin=\"normal\"\n                                />\n                              </Grid>\n                              <Grid item xs={4} >\n                                <TextField\n                                  required\n                                  name=\"Constituency\"\n                                  id=\"Constituency\"\n                                  label=\"Constituency\"\n                                  value={this.state.constituency}\n                                  onChange={evt => this.updateConsitituency(evt)}\n                                  margin=\"normal\"\n                                />\n                              </Grid>\n                            </Grid>\n                            <Grid \n                              container \n                              item \n                              xs={12}\n                              direction=\"row\"\n                              justify=\"center\"\n                              alignItems=\"center\" \n                              style={{ marginTop : \"20px\"}}\n                            >\n                              <input\n                                accept=\"image/*\"\n                                id=\"DP\"\n                                name=\"DP\"\n                                type=\"file\"\n                                onChange={evt => this.updatePartySymbol(evt)}\n                                style={{\n                                  display:\"none\"\n                                }}\n                              />\n                              <Grid item xs={12}>\n                                <label htmlFor=\"DP\">\n                                  Upload the ElectionParty Symbol\n                                  <Button variant=\"contained\" component=\"span\" style={{ marginLeft : \"10px\"}}>\n                                    Upload\n                                  </Button>\n                                </label>\n                              </Grid>\n                            </Grid>\n                            <Grid \n                              container \n                              item \n                              xs={12}\n                              direction=\"row\"\n                              justify=\"center\"\n                              alignItems=\"center\" \n                              style={{ marginTop : \"20px\"}}\n                            >\n                              <Button \n                                variant=\"contained\" \n                                color=\"primary\"\n                                style={{\n                                  marginTop : \"60px\",\n                                  margin:\"5px\"\n                                }}\n                                onClick={this.SignUp}\n                              >SignUp</Button>\n                              <Button \n                                variant=\"contained\"\n                                style={{\n                                  marginTop : \"60px\",\n                                  margin:\"5px\"\n                                }}\n                                onClick={() => this.setState({ goToSignUp : false })}\n                              >Back</Button>\n                            </Grid>\n                          </Grid>\n                         </Paper>\n                      : <Paper \n                          elevation={2}\n                          className=\"loginCard\"\n                        >\n                          <Typography variant=\"h4\" gutterBottom>Candidate Login</Typography>\n                          <form onSubmit={this.SignIn} autoComplete=\"off\">\n                            <TextField\n                              required\n                              name=\"username\"\n                              id=\"username\"\n                              label=\"Username\"\n                              value={this.state.inputUsername}\n                              onChange={evt => this.updateInputUsername(evt)}\n                              margin=\"normal\"\n                            />\n                            <br />\n                            <TextField\n                              required\n                              name=\"password\"\n                              id=\"password\"\n                              label=\"Password\"\n                              type=\"password\"\n                              value={this.state.inputPassword}\n                              onChange={evt => this.updateInputPassword(evt)}\n                              margin=\"normal\"\n                            />\n                            <br />\n                            <Button \n                              variant=\"contained\" \n                              color=\"primary\"\n                              style={{\n                                marginTop : \"30px\",\n                                margin:\"5px\"\n                              }} \n                              onClick={this.SignIn}  \n                            >Login</Button>\n                            <Button \n                              variant=\"contained\" \n                              color=\"secondary\"\n                              style={{\n                                marginTop : \"30px\",\n                                margin:\"5px\"\n                              }}\n                              onClick={() => this.setState({ goToSignUp : true })}\n                            >Register</Button>\n                          </form>\n                          <Home className=\"HomeIcon\" onClick={() => this.props.updateHomeState(0, null)} />\n                        </Paper>\n                  }  \n              </Grid>\n            </div>\n        ) \n    }\n          \n}\n\nexport default CandidateLogin;"]},"metadata":{},"sourceType":"module"}