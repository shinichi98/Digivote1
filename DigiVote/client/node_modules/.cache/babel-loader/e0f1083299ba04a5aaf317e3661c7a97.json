{"ast":null,"code":"import _regeneratorRuntime from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/utkarsh/study2/proj/DigiVote/client/src/Elections/ResultCard.jsx\";\nimport React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Home from '@material-ui/icons/Home';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ipfsFetcher } from '../ipfsStore';\n\nvar ResultCard = /*#__PURE__*/function (_Component) {\n  _inherits(ResultCard, _Component);\n\n  function ResultCard(props) {\n    var _this;\n\n    _classCallCheck(this, ResultCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResultCard).call(this, props));\n    _this.componentWillMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var contract, candidates, totalCandidates, candidatesData, i, candidateHash, candidateData, groupBy, groupbyParties, groupByConstituency, candidateByParties, candidateByConstituency, candidateByPartiesLength, PartiesVote, _loop, _i, totalVotes, winningTotal, newArray;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loaderStart: true\n              });\n\n              contract = _this.props.userObject.contract; //calling for seggrigation of Political Parties of the Candidate\n\n              candidates = _this.props.selectedElection.candidates;\n              totalCandidates = candidates.length, candidatesData = []; //looping for fetching the CAndidate paersonal data from its username\n\n              i = 0;\n\n            case 5:\n              if (!(i < totalCandidates)) {\n                _context.next = 17;\n                break;\n              }\n\n              if (!(candidates[i][0] !== \"NOTA\")) {\n                _context.next = 14;\n                break;\n              }\n\n              candidateHash = void 0;\n              _context.next = 10;\n              return contract.methods.getCandidatePersonal(candidates[i][0]).call().then(function (res) {\n                return candidateHash = res;\n              }).catch(console.error);\n\n            case 10:\n              _context.next = 12;\n              return ipfsFetcher(candidateHash);\n\n            case 12:\n              candidateData = _context.sent;\n              candidatesData.push(candidateData);\n\n            case 14:\n              i++;\n              _context.next = 5;\n              break;\n\n            case 17:\n              //functions for grouping the Candiates from there respective political parties\n              groupBy = function groupBy(key) {\n                return function (array) {\n                  return array.reduce(function (objectsByKeyValue, obj) {\n                    var value = obj[key];\n                    objectsByKeyValue[value] = (objectsByKeyValue[value] || []).concat(obj);\n                    return objectsByKeyValue;\n                  }, {});\n                };\n              }; //preparing a template function for groupby parties from any array object\n\n\n              groupbyParties = groupBy('ElectionParty'); //preparing the template function for group by constituency(places) of the candidates.\n\n              groupByConstituency = groupBy(2); //calling that function with candidates data object to group it by the parties\n\n              candidateByParties = groupbyParties(candidatesData); //calling that function with  total numbe of candidates of an election to be group by constituencies\n\n              candidateByConstituency = groupByConstituency(candidates); //Calculating PartiesVote\n\n              candidateByPartiesLength = Object.keys(candidateByParties).length;\n              PartiesVote = [];\n\n              _loop = function _loop(_i) {\n                var innerArray = [];\n\n                var votes = 0,\n                    key = Object.keys(candidateByParties)[_i];\n\n                innerArray.push(Object.keys(candidateByParties)[_i]);\n\n                var _loop2 = function _loop2(j) {\n                  var candidate = candidateByParties[key][j];\n                  candidates.forEach(function (element) {\n                    if (element[0] == candidate.Username) {\n                      votes = votes + parseInt(element[1]);\n                    }\n                  });\n                };\n\n                for (var j = 0; j < candidateByParties[key].length; j++) {\n                  _loop2(j);\n                }\n\n                innerArray.push(votes);\n                PartiesVote.push(innerArray);\n              };\n\n              for (_i = 0; _i < candidateByPartiesLength; _i++) {\n                _loop(_i);\n              }\n\n              totalVotes = parseInt(_this.props.selectedElection.election.TotalVoters);\n              winningTotal = totalVotes / 2;\n              PartiesVote.sort(function (a, b) {\n                return b[1] - a[1];\n              });\n\n              if (PartiesVote[0][1] >= winningTotal || PartiesVote[0][1] > 0) {\n                _this.setState({\n                  winParty: PartiesVote[0][0]\n                });\n              }\n\n              newArray = Object.entries(candidateByConstituency);\n\n              _this.setState({\n                PartiesVote: PartiesVote,\n                candidateByConstituency: newArray,\n                loaderStart: false\n              });\n\n            case 32:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.state = {\n      loaderStart: false,\n      condidates: [],\n      candidateByConstituency: null,\n      PartiesVote: [],\n      winParty: null\n    };\n    return _this;\n  }\n\n  _createClass(ResultCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Fade, {\n        in: this.state.loaderStart === true,\n        unmountOnExit: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        className: \"loaderDiv1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CircularProgress, {\n        className: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        className: \"ResultBack\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        elevation: 2,\n        className: \"ElectionHeader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      }, \"Election Result\"))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: \"ResultBody\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 32,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }, this.state.PartiesVote.map(function (party, index) {\n        return /*#__PURE__*/React.createElement(Grid, {\n          key: index,\n          item: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          className: party[0] === _this2.state.winParty ? \"ResultCardWin\" : \"ResultCard\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 30\n          }\n        }, /*#__PURE__*/React.createElement(CardContent, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          variant: \"h5\",\n          className: \"PartyName\",\n          color: \"textPrimary\",\n          gutterBottom: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 33\n          }\n        }, party[0]), /*#__PURE__*/React.createElement(Typography, {\n          variant: \"h4\",\n          className: \"PartyVote\",\n          color: \"textPrimary\",\n          gutterBottom: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 33\n          }\n        }, party[1]))));\n      })))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 16,\n        className: \"CRGrid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }\n      }, this.state.candidateByConstituency && this.state.candidateByConstituency.map(function (cons, index) {\n        return /*#__PURE__*/React.createElement(Grid, {\n          key: index,\n          item: true,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(ExpansionPanel, {\n          className: \"ConstituencyResult\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(ExpansionPanelSummary, {\n          expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 80\n            }\n          }),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          variant: \"h6\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 45\n          }\n        }, cons[0] == \"anywhere\" ? \"NOTA\" : cons[0], \" Result\")), /*#__PURE__*/React.createElement(ExpansionPanelDetails, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          justify: \"center\",\n          spacing: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 45\n          }\n        }, cons[1].map(function (candidate, index) {\n          return /*#__PURE__*/React.createElement(Grid, {\n            key: index,\n            container: true,\n            item: true,\n            xs: 12,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 57\n            }\n          }, /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            xs: 6,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 61\n            }\n          }, /*#__PURE__*/React.createElement(Typography, {\n            variant: \"subtitle1\",\n            className: \"CandidateName\",\n            color: \"textPrimary\",\n            gutterBottom: true,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 65\n            }\n          }, candidate[0])), /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            xs: 6,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 61\n            }\n          }, /*#__PURE__*/React.createElement(Typography, {\n            variant: \"subtitle1\",\n            className: \"CandidateVote\",\n            color: \"textPrimary\",\n            gutterBottom: true,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 65\n            }\n          }, candidate[1])), /*#__PURE__*/React.createElement(\"hr\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 61\n            }\n          }));\n        })))));\n      }))))), /*#__PURE__*/React.createElement(Home, {\n        className: \"HomeIcon\",\n        style: {\n          color: \"#fff\"\n        },\n        onClick: function onClick() {\n          return _this2.props.updateHomeState(0, null);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }\n      })));\n    }\n  }]);\n\n  return ResultCard;\n}(Component);\n\nexport { ResultCard as default };","map":{"version":3,"sources":["/home/utkarsh/study2/proj/DigiVote/client/src/Elections/ResultCard.jsx"],"names":["React","Component","Paper","Grid","Typography","Home","Card","CardContent","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","ExpandMoreIcon","Fade","CircularProgress","ipfsFetcher","ResultCard","props","componentWillMount","setState","loaderStart","contract","userObject","candidates","selectedElection","totalCandidates","length","candidatesData","i","candidateHash","methods","getCandidatePersonal","call","then","res","catch","console","error","candidateData","push","groupBy","key","array","reduce","objectsByKeyValue","obj","value","concat","groupbyParties","groupByConstituency","candidateByParties","candidateByConstituency","candidateByPartiesLength","Object","keys","PartiesVote","innerArray","votes","j","candidate","forEach","element","Username","parseInt","totalVotes","election","TotalVoters","winningTotal","sort","a","b","winParty","newArray","entries","state","condidates","log","map","party","index","cons","color","updateHomeState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Home from '@material-ui/icons/Home';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {ipfsFetcher} from '../ipfsStore'\n\nexport default class ResultCard extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            loaderStart : false,\n            condidates : [],\n            candidateByConstituency : null,\n            PartiesVote : [],\n            winParty : null\n        }\n    }\n\n    componentWillMount = async() => {\n        this.setState({ loaderStart : true })\n\n        const {contract} = this.props.userObject\n\n        //calling for seggrigation of Political Parties of the Candidate\n        const {candidates} = this.props.selectedElection \n        let totalCandidates = candidates.length,\n            candidatesData = []\n        \n        //looping for fetching the CAndidate paersonal data from its username\n        for(let i=0; i< totalCandidates; i++){\n            if(candidates[i][0] !== \"NOTA\"){\n                let candidateHash\n                await contract.methods.getCandidatePersonal(candidates[i][0]).call()\n                .then(res => candidateHash = res)\n                .catch(console.error)\n    \n                let candidateData = await ipfsFetcher(candidateHash)\n                candidatesData.push(candidateData)\n            }\n        }\n\n        //functions for grouping the Candiates from there respective political parties\n        const groupBy = key => array =>\n            array.reduce((objectsByKeyValue, obj) => {\n                const value = obj[key];\n                objectsByKeyValue[value] = (objectsByKeyValue[value] || []).concat(obj);\n                return objectsByKeyValue;\n        }, {});\n\n        //preparing a template function for groupby parties from any array object\n        const groupbyParties = groupBy('ElectionParty')\n        //preparing the template function for group by constituency(places) of the candidates.\n        const groupByConstituency = groupBy(2) \n\n        //calling that function with candidates data object to group it by the parties\n        let candidateByParties = groupbyParties(candidatesData)\n\n        //calling that function with  total numbe of candidates of an election to be group by constituencies\n        let candidateByConstituency = groupByConstituency(candidates) \n\n        //Calculating PartiesVote\n        let candidateByPartiesLength = Object.keys(candidateByParties).length\n        let PartiesVote = []\n\n        for(let i=0;i<candidateByPartiesLength;i++){\n  \n            let innerArray = []\n            let votes =  0,\n                key = Object.keys(candidateByParties)[i]\n            \n            innerArray.push(Object.keys(candidateByParties)[i])\n            for(let j=0;j<candidateByParties[key].length;j++){\n\n               let candidate = candidateByParties[key][j]\n                \n                candidates.forEach(element => {\n                    if(element[0] == candidate.Username){\n                        votes = votes + parseInt(element[1])\n                    }\n                });\n            }\n            \n            innerArray.push(votes)\n\n            PartiesVote.push(innerArray)\n        }\n\n        let totalVotes = parseInt(this.props.selectedElection.election.TotalVoters)\n        let winningTotal = totalVotes/2\n\n        PartiesVote.sort(function(a,b){\n            return b[1] - a[1];\n        });\n\n        if((PartiesVote[0][1] >= winningTotal) || (PartiesVote[0][1] > 0)){\n            this.setState({ winParty : PartiesVote[0][0] })\n        }\n\n        let newArray = Object.entries(candidateByConstituency)\n\n        this.setState({ PartiesVote, candidateByConstituency : newArray, loaderStart : false })\n\n    }\n\n    render(){\n        console.log(this.props)\n        return(\n            <div>\n            <Fade\n                in={this.state.loaderStart === true}\n                unmountOnExit\n            >\n                <Grid \n                    container \n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className=\"loaderDiv1\"\n                >\n                <CircularProgress className=\"loader\"/>\n                </Grid>\n            </Fade>\n            <Grid \n                  container \n                  direction=\"row\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  className=\"ResultBack\"\n              >\n                <Grid item xs={12}>\n                    <Paper \n                          elevation={2}\n                          className=\"ElectionHeader\"\n                    >\n                        <Typography variant=\"h4\" gutterBottom>Election Result</Typography>\n                    </Paper>\n                </Grid>\n                <Grid container className=\"ResultBody\">\n                <Grid container spacing={16}>\n                    <Grid item xs={12}>\n                    <Grid container  justify=\"center\" spacing={32}>\n                        {this.state.PartiesVote.map((party, index)  => (\n                        <Grid key={index} item>\n                             <Card className={ party[0] === this.state.winParty ? \"ResultCardWin\" : \"ResultCard\" }>\n                                <CardContent>\n                                <Typography variant=\"h5\" className=\"PartyName\" color=\"textPrimary\" gutterBottom>\n                                    {party[0]}\n                                </Typography>\n                                <Typography variant=\"h4\" className=\"PartyVote\" color=\"textPrimary\" gutterBottom>\n                                    {party[1]}\n                                </Typography>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        ))}\n                    </Grid>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={16}>\n                    <Grid item xs={12}>\n                    <Grid container  justify=\"center\" spacing={16} className=\"CRGrid\">\n                        {\n                            this.state.candidateByConstituency &&\n                                this.state.candidateByConstituency.map((cons, index)  => (\n                                    <Grid key={index} item xs={12}>\n                                        <ExpansionPanel className=\"ConstituencyResult\">\n                                            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                                            <Typography variant=\"h6\">{cons[0] == \"anywhere\" ? \"NOTA\" : cons[0]} Result</Typography>\n                                            </ExpansionPanelSummary>\n                                            <ExpansionPanelDetails>\n                                            <Grid container  justify=\"center\" spacing={12}> \n                                                {\n                                                    cons[1].map((candidate, index)=>\n                                                        <Grid key={index} container item xs={12}>\n                                                            <Grid item xs={6}>\n                                                                <Typography variant=\"subtitle1\" className=\"CandidateName\" color=\"textPrimary\" gutterBottom>\n                                                                    {candidate[0]}\n                                                                </Typography> \n                                                            </Grid>\n                                                            <Grid item xs={6}>\n                                                                <Typography variant=\"subtitle1\" className=\"CandidateVote\" color=\"textPrimary\" gutterBottom>\n                                                                    {candidate[1]}\n                                                                </Typography>\n                                                            </Grid>\n                                                            <hr />\n                                                        </Grid>\n                                                    )\n                                                }\n                                            </Grid>\n                                            </ExpansionPanelDetails>\n                                        </ExpansionPanel>\n                                    </Grid>\n                                    ))\n                        }\n                    </Grid>\n                    </Grid>\n                </Grid>\n                </Grid>\n                <Home className=\"HomeIcon\" style={{ color: \"#fff\"}} onClick={() => this.props.updateHomeState(0, null)} />\n            </Grid>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}