{"ast":null,"code":"import _regeneratorRuntime from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/utkarsh/study2/proj/DigiVote/client/src/Anaylsis Report/Post-Analysis.jsx\";\nimport React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Home from '@material-ui/icons/Home';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Chart } from \"react-google-charts\";\nimport { ipfsFetcher } from '../ipfsStore';\n\nvar Post_Anaylsis = /*#__PURE__*/function (_Component) {\n  _inherits(Post_Anaylsis, _Component);\n\n  function Post_Anaylsis(props) {\n    var _this;\n\n    _classCallCheck(this, Post_Anaylsis);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Post_Anaylsis).call(this, props));\n    _this.componentWillMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var contract, totalVoter, totalVoting, votersData, i, voterHash, voterData, maleVoter, femaleVoter, candidates, totalCandidates, candidatesData, _i, candidateHash, candidateData, groupBy, groupbyParties, groupByConstituency, candidateByParties, candidateByConstituency, candidateByPartiesLength, PartiesVote, _loop, _i2, totalVotes, winningTotal, newArray, _i3;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loaderStart: true\n              });\n\n              contract = _this.props.userObject.contract; //call for total number of Voter in the Election\n\n              totalVoter = _this.props.selectedElection.election.TotalVoters; //call for total voting held in Election\n\n              totalVoting = 0;\n              _context.next = 6;\n              return contract.methods.aadhaarCount(_this.props.selectedElection.electionHash).call().then(function (res) {\n                return totalVoting = res;\n              }).catch(console.error);\n\n            case 6:\n              //calling for the voters data of election\n              votersData = [];\n              i = 0;\n\n            case 8:\n              if (!(i < totalVoting)) {\n                _context.next = 19;\n                break;\n              }\n\n              voterHash = void 0;\n              _context.next = 12;\n              return contract.methods.getVoterToElection(_this.props.selectedElection.electionHash, i).call().then(function (res) {\n                return voterHash = res;\n              }).catch(console.error);\n\n            case 12:\n              _context.next = 14;\n              return ipfsFetcher(voterHash);\n\n            case 14:\n              voterData = _context.sent;\n              votersData.push(voterData); //console.log(voterData)\n\n            case 16:\n              i++;\n              _context.next = 8;\n              break;\n\n            case 19:\n              //calling for seggregation of Gender of the Voters.\n              maleVoter = votersData.filter(function (voter) {\n                return voter.Gender == 'M';\n              });\n              femaleVoter = votersData.filter(function (voter) {\n                return voter.Gender == 'F';\n              }); //calling for seggrigation of Political Parties of the Candidate\n\n              candidates = _this.props.selectedElection.candidates;\n              totalCandidates = candidates.length, candidatesData = []; //looping for fetching the CAndidate paersonal data from its username\n\n              _i = 0;\n\n            case 24:\n              if (!(_i < totalCandidates)) {\n                _context.next = 36;\n                break;\n              }\n\n              if (!(candidates[_i][0] !== \"NOTA\")) {\n                _context.next = 33;\n                break;\n              }\n\n              candidateHash = void 0;\n              _context.next = 29;\n              return contract.methods.getCandidatePersonal(candidates[_i][0]).call().then(function (res) {\n                return candidateHash = res;\n              }).catch(console.error);\n\n            case 29:\n              _context.next = 31;\n              return ipfsFetcher(candidateHash);\n\n            case 31:\n              candidateData = _context.sent;\n              candidatesData.push(candidateData);\n\n            case 33:\n              _i++;\n              _context.next = 24;\n              break;\n\n            case 36:\n              //functions for grouping the Candiates from there respective political parties\n              groupBy = function groupBy(key) {\n                return function (array) {\n                  return array.reduce(function (objectsByKeyValue, obj) {\n                    var value = obj[key];\n                    objectsByKeyValue[value] = (objectsByKeyValue[value] || []).concat(obj);\n                    return objectsByKeyValue;\n                  }, {});\n                };\n              }; //preparing a template function for groupby parties from any array object\n\n\n              groupbyParties = groupBy('ElectionParty'); //preparing the template function for group by constituency(places) of the candidates.\n\n              groupByConstituency = groupBy(2); //calling that function with candidates data object to group it by the parties\n\n              candidateByParties = groupbyParties(candidatesData); //calling that function with  total numbe of candidates of an election to be group by constituencies\n\n              candidateByConstituency = groupByConstituency(candidates); //Calculating PartiesVote\n\n              candidateByPartiesLength = Object.keys(candidateByParties).length;\n              PartiesVote = [];\n\n              _loop = function _loop(_i2) {\n                var innerArray = [];\n\n                var votes = 0,\n                    key = Object.keys(candidateByParties)[_i2];\n\n                innerArray.push(Object.keys(candidateByParties)[_i2]);\n\n                var _loop2 = function _loop2(j) {\n                  var candidate = candidateByParties[key][j];\n                  candidates.forEach(function (element) {\n                    if (element[0] == candidate.Username) {\n                      votes = votes + parseInt(element[1]);\n                    }\n                  });\n                };\n\n                for (var j = 0; j < candidateByParties[key].length; j++) {\n                  _loop2(j);\n                }\n\n                innerArray.push(votes);\n                PartiesVote.push(innerArray);\n              };\n\n              for (_i2 = 0; _i2 < candidateByPartiesLength; _i2++) {\n                _loop(_i2);\n              }\n\n              totalVotes = parseInt(_this.props.selectedElection.election.TotalVoters);\n              winningTotal = totalVotes / 2;\n              PartiesVote.sort(function (a, b) {\n                return b[1] - a[1];\n              });\n\n              if (PartiesVote[0][1] >= winningTotal || PartiesVote[0][1] > 0) {\n                _this.setState({\n                  winParty: PartiesVote[0][0]\n                });\n              }\n\n              newArray = Object.entries(candidateByConstituency);\n\n              for (_i3 = 0; _i3 < newArray.length; _i3++) {\n                newArray[_i3][1].sort(function (a, b) {\n                  return b[1] - a[1];\n                });\n              } // console.log(candidatesData)\n              // console.log(candidateByParties)\n              // console.log(PartiesVote)\n              // console.log(newArray)\n\n\n              _this.setState({\n                totalVoter: totalVoter,\n                totalVoting: totalVoting,\n                votersData: votersData,\n                maleVoter: maleVoter,\n                femaleVoter: femaleVoter,\n                loaderStart: false,\n                PartiesVote: PartiesVote,\n                candidateByConstituency: newArray\n              });\n\n            case 52:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.state = {\n      totalVoter: 0,\n      totalVoting: 0,\n      votersData: [],\n      maleVoter: [],\n      femaleVoter: [],\n      candidatesData: [],\n      loaderStart: false,\n      winParty: null,\n      PartiesVote: []\n    };\n    return _this;\n  }\n\n  _createClass(Post_Anaylsis, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state.PartiesVote);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Fade, {\n        in: this.state.loaderStart === true,\n        unmountOnExit: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        className: \"loaderDiv1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CircularProgress, {\n        className: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        className: \"ResultBack\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        elevation: 2,\n        className: \"ElectionHeader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }\n      }, \"Post Election Report\"))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: \"ResultBody\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }\n      }, this.state.totalVoter && /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 32,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 32\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Chart, {\n        width: '300px',\n        height: '300px',\n        chartType: \"PieChart\",\n        data: [['Election', 'Gender Voters'], ['Male Voters', this.state.maleVoter.length], ['Female Voters', this.state.femaleVoter.length]],\n        options: {\n          title: 'Gender Voter Percentage',\n          // Just add this option\n          pieHole: 0.6\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Chart, {\n        width: '300px',\n        height: '300px',\n        chartType: \"PieChart\",\n        data: [['Election', 'Total Voting Percentage'], ['Non Voters', this.state.totalVoter - this.state.totalVoting], ['Voting', this.state.totalVoting]],\n        options: {\n          title: 'Total Voting Percentage',\n          // Just add this option\n          pieHole: 0.6\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 45\n        }\n      }))))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 16,\n        style: {\n          marginTop: \"50px\",\n          marginBottom: \"50px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 32,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }\n      }, this.state.PartiesVote.map(function (party, index) {\n        return /*#__PURE__*/React.createElement(Grid, {\n          key: index,\n          item: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          className: party[0] === _this2.state.winParty ? \"ResultCardWin\" : \"ResultCard\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 30\n          }\n        }, /*#__PURE__*/React.createElement(CardContent, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          variant: \"h5\",\n          className: \"PartyName\",\n          color: \"textPrimary\",\n          gutterBottom: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 33\n          }\n        }, party[0]), /*#__PURE__*/React.createElement(Typography, {\n          variant: \"h4\",\n          className: \"PartyVote\",\n          color: \"textPrimary\",\n          gutterBottom: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 33\n          }\n        }, party[1]))));\n      })))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 16,\n        className: \"CRGrid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }\n      }, this.state.candidateByConstituency && this.state.candidateByConstituency.map(function (cons, index) {\n        return /*#__PURE__*/React.createElement(Grid, {\n          key: index,\n          item: true,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 37\n          }\n        }, cons[0] !== \"anywhere\" && /*#__PURE__*/React.createElement(ExpansionPanel, {\n          className: \"ConstituencyResult\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(ExpansionPanelSummary, {\n          expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 84\n            }\n          }),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          variant: \"h6\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 53\n          }\n        }, cons[0] == \"anywhere\" ? \"NOTA\" : cons[0], \" Constituency Winner\")), /*#__PURE__*/React.createElement(ExpansionPanelDetails, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          justify: \"center\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          item: true,\n          xs: 12,\n          style: {\n            \"background\": \"#64dd17\",\n            \"color\": \"#fff\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 6,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 65\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          variant: \"subtitle1\",\n          className: \"CandidateName\",\n          color: \"textPrimary\",\n          gutterBottom: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 69\n          }\n        }, cons[1][0][0])), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 6,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 65\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          variant: \"subtitle1\",\n          className: \"CandidateVote\",\n          color: \"textPrimary\",\n          gutterBottom: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 69\n          }\n        }, cons[1][0][1])), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 65\n          }\n        }))))));\n      }))))), /*#__PURE__*/React.createElement(Home, {\n        className: \"HomeIcon\",\n        style: {\n          color: \"#fff\"\n        },\n        onClick: function onClick() {\n          return _this2.props.updateHomeState(0, null);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 17\n        }\n      })));\n    }\n  }]);\n\n  return Post_Anaylsis;\n}(Component);\n\nexport { Post_Anaylsis as default };","map":{"version":3,"sources":["/home/utkarsh/study2/proj/DigiVote/client/src/Anaylsis Report/Post-Analysis.jsx"],"names":["React","Component","Paper","Grid","Typography","Home","Card","CardContent","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","ExpandMoreIcon","Fade","CircularProgress","Chart","ipfsFetcher","Post_Anaylsis","props","componentWillMount","setState","loaderStart","contract","userObject","totalVoter","selectedElection","election","TotalVoters","totalVoting","methods","aadhaarCount","electionHash","call","then","res","catch","console","error","votersData","i","voterHash","getVoterToElection","voterData","push","maleVoter","filter","voter","Gender","femaleVoter","candidates","totalCandidates","length","candidatesData","candidateHash","getCandidatePersonal","candidateData","groupBy","key","array","reduce","objectsByKeyValue","obj","value","concat","groupbyParties","groupByConstituency","candidateByParties","candidateByConstituency","candidateByPartiesLength","Object","keys","PartiesVote","innerArray","votes","j","candidate","forEach","element","Username","parseInt","totalVotes","winningTotal","sort","a","b","winParty","newArray","entries","state","log","title","pieHole","marginTop","marginBottom","map","party","index","cons","color","updateHomeState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Home from '@material-ui/icons/Home';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Chart } from \"react-google-charts\";\nimport { ipfsFetcher } from '../ipfsStore';\n\nexport default class Post_Anaylsis extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            totalVoter : 0,\n            totalVoting : 0,\n            votersData : [],\n            maleVoter : [],\n            femaleVoter : [],\n            candidatesData : [],\n            loaderStart : false,\n            winParty : null,\n            PartiesVote : []\n        }\n    }\n\n    componentWillMount = async() => {\n\n        this.setState({ loaderStart : true })\n        const {contract} = this.props.userObject\n\n        //call for total number of Voter in the Election\n        let totalVoter = this.props.selectedElection.election.TotalVoters\n\n        //call for total voting held in Election\n        let totalVoting = 0\n        await contract.methods.aadhaarCount(this.props.selectedElection.electionHash).call()\n        .then(res => totalVoting = res)\n        .catch(console.error)\n\n        //calling for the voters data of election\n        let votersData = []\n\n        for(let i=0; i<totalVoting; i++){\n\n            let voterHash\n            await contract.methods.getVoterToElection(this.props.selectedElection.electionHash, i).call()\n            .then(res => voterHash = res)\n            .catch(console.error)\n\n            let voterData = await ipfsFetcher(voterHash)\n            votersData.push(voterData)\n            //console.log(voterData)\n        }\n\n        //calling for seggregation of Gender of the Voters.\n        let maleVoter = votersData.filter((voter) => {\n            return (voter.Gender == 'M')\n        })\n\n        let femaleVoter = votersData.filter((voter) => {\n            return (voter.Gender == 'F')\n        })\n\n        //calling for seggrigation of Political Parties of the Candidate\n        const {candidates} = this.props.selectedElection \n        let totalCandidates = candidates.length,\n            candidatesData = []\n        \n        //looping for fetching the CAndidate paersonal data from its username\n        for(let i=0; i< totalCandidates; i++){\n            if(candidates[i][0] !== \"NOTA\"){\n                let candidateHash\n                await contract.methods.getCandidatePersonal(candidates[i][0]).call()\n                .then(res => candidateHash = res)\n                .catch(console.error)\n    \n                let candidateData = await ipfsFetcher(candidateHash)\n                candidatesData.push(candidateData)\n            }\n        }\n\n        //functions for grouping the Candiates from there respective political parties\n        const groupBy = key => array =>\n            array.reduce((objectsByKeyValue, obj) => {\n                const value = obj[key];\n                objectsByKeyValue[value] = (objectsByKeyValue[value] || []).concat(obj);\n                return objectsByKeyValue;\n        }, {});\n\n        //preparing a template function for groupby parties from any array object\n        const groupbyParties = groupBy('ElectionParty')\n        //preparing the template function for group by constituency(places) of the candidates.\n        const groupByConstituency = groupBy(2) \n\n        //calling that function with candidates data object to group it by the parties\n        let candidateByParties = groupbyParties(candidatesData)\n\n        //calling that function with  total numbe of candidates of an election to be group by constituencies\n        let candidateByConstituency = groupByConstituency(candidates) \n\n        //Calculating PartiesVote\n        let candidateByPartiesLength = Object.keys(candidateByParties).length\n        let PartiesVote = []\n\n        for(let i=0;i<candidateByPartiesLength;i++){\n    \n            let innerArray = []\n            let votes =  0,\n                key = Object.keys(candidateByParties)[i]\n            \n            innerArray.push(Object.keys(candidateByParties)[i])\n            for(let j=0;j<candidateByParties[key].length;j++){\n\n                let candidate = candidateByParties[key][j]\n                \n                candidates.forEach(element => {\n                    if(element[0] == candidate.Username){\n                        votes = votes + parseInt(element[1])\n                    }\n                });\n            }\n            \n            innerArray.push(votes)\n\n            PartiesVote.push(innerArray)\n        }\n\n        let totalVotes = parseInt(this.props.selectedElection.election.TotalVoters)\n        let winningTotal = totalVotes/2\n\n        PartiesVote.sort(function(a,b){\n            return b[1] - a[1];\n        });\n\n        if((PartiesVote[0][1] >= winningTotal) || (PartiesVote[0][1] > 0)){\n            this.setState({ winParty : PartiesVote[0][0] })\n        }\n\n        let newArray = Object.entries(candidateByConstituency)\n\n        for(let i=0;i<newArray.length;i++){\n                newArray[i][1].sort(function(a,b){\n                    return b[1] - a[1];\n                })\n            \n        }\n\n        // console.log(candidatesData)\n        // console.log(candidateByParties)\n        // console.log(PartiesVote)\n        // console.log(newArray)\n\n\n        this.setState({\n            totalVoter,\n            totalVoting,\n            votersData,\n            maleVoter,\n            femaleVoter,\n            loaderStart : false,\n            PartiesVote,\n            candidateByConstituency : newArray\n        })\n    }\n\n    render(){\n        console.log(this.state.PartiesVote)\n        return(\n            <div>\n                <Fade\n                in={this.state.loaderStart === true}\n                unmountOnExit\n            >\n                <Grid \n                    container \n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className=\"loaderDiv1\"\n                >\n                <CircularProgress className=\"loader\"/>\n                </Grid>\n            </Fade>\n                <Grid \n                  container \n                  direction=\"row\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  className=\"ResultBack\"\n              >\n                <Grid item xs={12}>\n                    <Paper \n                          elevation={2}\n                          className=\"ElectionHeader\"\n                    >\n                        <Typography variant=\"h4\" gutterBottom>Post Election Report</Typography>\n                    </Paper>\n                </Grid>\n                <Grid container className=\"ResultBody\">\n                <Grid container spacing={16}>\n                    <Grid item xs={12}>\n                    {\n                        this.state.totalVoter\n                            && <Grid container  justify=\"center\" spacing={32}>\n                                    <Grid item>\n                                        <Chart\n                                            width={'300px'}\n                                            height={'300px'}\n                                            chartType=\"PieChart\"\n                                            data={[\n                                                ['Election', 'Gender Voters'],\n                                                ['Male Voters', this.state.maleVoter.length],\n                                                ['Female Voters', this.state.femaleVoter.length]\n                                            ]}\n                                            options={{\n                                                title: 'Gender Voter Percentage',\n                                                // Just add this option\n                                                pieHole: 0.6,\n                                            }}\n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                            <Chart\n                                                width={'300px'}\n                                                height={'300px'}\n                                                chartType=\"PieChart\"\n                                                data={[\n                                                    ['Election', 'Total Voting Percentage'],\n                                                    ['Non Voters', (this.state.totalVoter - this.state.totalVoting)],\n                                                    ['Voting', this.state.totalVoting]\n                                                ]}\n                                                options={{\n                                                    title: 'Total Voting Percentage',\n                                                    // Just add this option\n                                                    pieHole: 0.6,\n                                                }}\n                                        />\n                                    </Grid>  \n                            </Grid>\n                    }\n                    </Grid>\n                </Grid>\n                <Grid container spacing={16} style={{ marginTop : \"50px\", marginBottom : \"50px\"}}>\n                    <Grid item xs={12}>\n                    <Grid container  justify=\"center\" spacing={32}>\n                        {this.state.PartiesVote.map((party, index)  => (\n                        <Grid key={index} item>\n                             <Card className={ party[0] === this.state.winParty ? \"ResultCardWin\" : \"ResultCard\" }>\n                                <CardContent>\n                                <Typography variant=\"h5\" className=\"PartyName\" color=\"textPrimary\" gutterBottom>\n                                    {party[0]}\n                                </Typography>\n                                <Typography variant=\"h4\" className=\"PartyVote\" color=\"textPrimary\" gutterBottom>\n                                    {party[1]}\n                                </Typography>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        ))}\n                    </Grid>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={16}>\n                    <Grid item xs={12}>\n                    <Grid container  justify=\"center\" spacing={16} className=\"CRGrid\">\n                        {\n                            this.state.candidateByConstituency &&\n                                this.state.candidateByConstituency.map((cons, index)  => (\n                                    <Grid key={index} item xs={12}>\n                                    {\n                                        cons[0] !== \"anywhere\" \n                                            &&  <ExpansionPanel className=\"ConstituencyResult\">\n                                                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                                                    <Typography variant=\"h6\">{cons[0] == \"anywhere\" ? \"NOTA\" : cons[0]} Constituency Winner</Typography>                                           \n                                                </ExpansionPanelSummary>\n                                                <ExpansionPanelDetails>\n                                                <Grid container  justify=\"center\" > \n                                                   \n                                                            <Grid container item xs={12} style={{ \"background\" : \"#64dd17\", \"color\" : \"#fff\" }}>\n                                                                <Grid item xs={6}>\n                                                                    <Typography variant=\"subtitle1\" className=\"CandidateName\" color=\"textPrimary\" gutterBottom>\n                                                                        {cons[1][0][0]}\n                                                                    </Typography> \n                                                                </Grid>\n                                                                <Grid item xs={6}>\n                                                                    <Typography variant=\"subtitle1\" className=\"CandidateVote\" color=\"textPrimary\" gutterBottom>\n                                                                        {cons[1][0][1]}\n                                                                    </Typography>\n                                                                </Grid>\n                                                                <hr />\n                                                            </Grid>\n                                                        \n                                                </Grid>\n                                                </ExpansionPanelDetails>\n                                                </ExpansionPanel>\n                                    }\n                                        \n                                    </Grid>\n                                    ))\n                        }\n                    </Grid>\n                    </Grid>\n                </Grid>\n                </Grid>\n                <Home className=\"HomeIcon\" style={{ color: \"#fff\"}} onClick={() => this.props.updateHomeState(0, null)} />\n            </Grid>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}