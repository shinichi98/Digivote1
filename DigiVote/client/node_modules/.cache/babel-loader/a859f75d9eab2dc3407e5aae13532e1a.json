{"ast":null,"code":"import _regeneratorRuntime from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/utkarsh/study2/proj/DigiVote/client/src/Elections/ElectionCard.jsx\";\nimport React, { Component } from 'react';\nimport CandidateRequestForm from '../Candidate/CandidateRequestForm';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AccountBalance from '@material-ui/icons/AccountBalance';\nimport Modal from '@material-ui/core/Modal';\nimport '../App.css';\n\nvar ElectionCard = /*#__PURE__*/function (_Component) {\n  _inherits(ElectionCard, _Component);\n\n  function ElectionCard(props) {\n    var _this;\n\n    _classCallCheck(this, ElectionCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ElectionCard).call(this, props));\n\n    _this.componentDidMount = function () {\n      var isPresent;\n\n      _this.props.candidateRequestElection.forEach(function (election) {\n        if (election === _this.props.electionHash) {\n          isPresent = true;\n        }\n      });\n\n      _this.setState({\n        isPresent: isPresent\n      });\n    };\n\n    _this.openRequest = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var contract, length, userFounded, i, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //console.log(this.state.item);\n              contract = _this.props.userObject.contract; //check whether the CAndidate is already nominated for this election or not\n\n              length = 0;\n              _context.next = 4;\n              return contract.methods.countElectionCandidates(_this.props.electionHash).call().then(function (res) {\n                return length = res;\n              }).catch(console.error);\n\n            case 4:\n              if (!(length !== 0)) {\n                _context.next = 20;\n                break;\n              }\n\n              userFounded = false;\n              i = 0;\n\n            case 7:\n              if (!(i < length)) {\n                _context.next = 17;\n                break;\n              }\n\n              result = void 0;\n              _context.next = 11;\n              return contract.methods.getSelectedCandidates(_this.props.electionHash, i).call().then(function (res) {\n                return result = res;\n              }).catch(console.error);\n\n            case 11:\n              if (!(result[0] == _this.props.username)) {\n                _context.next = 14;\n                break;\n              }\n\n              userFounded = true;\n              return _context.abrupt(\"break\", 17);\n\n            case 14:\n              i++;\n              _context.next = 7;\n              break;\n\n            case 17:\n              if (userFounded) {\n                console.log(\"this candidate is Already Nominated at this Election\");\n                alert(\"Sorry You are Already Nominated for this Election\");\n              } else {\n                //this.props.updateElectionState(true, this.state.electionHash)\n                _this.setState({\n                  isFormOpen: true\n                });\n              }\n\n              _context.next = 21;\n              break;\n\n            case 20:\n              // this.props.updateElectionState(true, this.state.electionHash)\n              _this.setState({\n                isFormOpen: true\n              });\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.updateForm = function () {\n      return _this.setState({\n        isFormOpen: false\n      });\n    };\n\n    _this.state = {\n      electionData: _this.props.electionData,\n      electionHash: _this.props.electionHash,\n      isFormOpen: false,\n      //flase it after debugging\n      isPresent: false\n    };\n    return _this;\n  }\n\n  _createClass(ElectionCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(\"Election Card\");\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"RequestCard\",\n        elevation: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        varient: \"h4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 23\n        }\n      }, this.props.electionData.typeOfElection), /*#__PURE__*/React.createElement(Typography, {\n        className: \"RequestCardText2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }\n      }, this.props.electionData.constituency), /*#__PURE__*/React.createElement(AccountBalance, {\n        className: \"ABIcon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Typography, {\n        varient: \"h4\",\n        className: \"RequestCardText3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 23\n        }\n      }, this.props.electionData.organizer), /*#__PURE__*/React.createElement(Typography, {\n        varient: \"h6\",\n        className: \"RequestCardText4\",\n        color: \"textSecondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 23\n        }\n      }, this.props.electionData.FCRD.substring(0, 24))), /*#__PURE__*/React.createElement(CardActions, {\n        style: {\n          marginTop: \"-13px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        variant: \"outlined\",\n        size: \"small\",\n        className: this.state.isPresent ? \"hide\" : \"show\",\n        onClick: this.openRequest,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }, \"Request It\")))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal, {\n        \"aria-labelledby\": \"Election-Request-Form\",\n        \"aria-describedby\": \"Election-Request-Form\",\n        open: this.state.isFormOpen,\n        onClose: function onClose() {\n          return _this2.setState({\n            isFormOpen: false\n          });\n        },\n        className: \"ElectionRequestForm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CandidateRequestForm, {\n        electionHash: this.props.electionHash,\n        candidateHash: this.props.candidateHash,\n        username: this.props.username,\n        userObject: this.props.userObject,\n        updateForm: this.updateForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }\n      })))));\n    }\n  }]);\n\n  return ElectionCard;\n}(Component);\n\nexport { ElectionCard as default };","map":{"version":3,"sources":["/home/utkarsh/study2/proj/DigiVote/client/src/Elections/ElectionCard.jsx"],"names":["React","Component","CandidateRequestForm","Grid","Card","CardActions","CardContent","Typography","Button","AccountBalance","Modal","ElectionCard","props","componentDidMount","isPresent","candidateRequestElection","forEach","election","electionHash","setState","openRequest","contract","userObject","length","methods","countElectionCandidates","call","then","res","catch","console","error","userFounded","i","result","getSelectedCandidates","username","log","alert","isFormOpen","updateForm","state","electionData","typeOfElection","constituency","organizer","FCRD","substring","marginTop","candidateHash"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,oBAAP,MAAiC,mCAAjC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAO,YAAP;;IAEqBC,Y;;;AAEjB,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,sFAAMA,KAAN;;AADc,UAUlBC,iBAVkB,GAUE,YAAM;AAEtB,UAAIC,SAAJ;;AAEA,YAAKF,KAAL,CAAWG,wBAAX,CAAoCC,OAApC,CAA4C,UAACC,QAAD,EAAc;AACtD,YAAGA,QAAQ,KAAK,MAAKL,KAAL,CAAWM,YAA3B,EAAwC;AACpCJ,UAAAA,SAAS,GAAG,IAAZ;AACH;AACJ,OAJD;;AAMA,YAAKK,QAAL,CAAc;AAAEL,QAAAA,SAAS,EAATA;AAAF,OAAd;AACH,KArBiB;;AAAA,UAuBlBM,WAvBkB,yEAuBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AACV;AACOC,cAAAA,QAFG,GAES,MAAKT,KAAL,CAAWU,UAFpB,CAEHD,QAFG,EAIV;;AACIE,cAAAA,MALM,GAKG,CALH;AAAA;AAAA,qBAMJF,QAAQ,CAACG,OAAT,CAAiBC,uBAAjB,CAAyC,MAAKb,KAAL,CAAWM,YAApD,EAAkEQ,IAAlE,GACLC,IADK,CACA,UAAAC,GAAG;AAAA,uBAAIL,MAAM,GAAGK,GAAb;AAAA,eADH,EAELC,KAFK,CAECC,OAAO,CAACC,KAFT,CANI;;AAAA;AAAA,oBAUPR,MAAM,KAAK,CAVJ;AAAA;AAAA;AAAA;;AAYFS,cAAAA,WAZE,GAYY,KAZZ;AAcEC,cAAAA,CAdF,GAcI,CAdJ;;AAAA;AAAA,oBAcOA,CAAC,GAACV,MAdT;AAAA;AAAA;AAAA;;AAgBEW,cAAAA,MAhBF;AAAA;AAAA,qBAiBIb,QAAQ,CAACG,OAAT,CAAiBW,qBAAjB,CAAuC,MAAKvB,KAAL,CAAWM,YAAlD,EAAgEe,CAAhE,EAAmEP,IAAnE,GACLC,IADK,CACA,UAAAC,GAAG;AAAA,uBAAIM,MAAM,GAAGN,GAAb;AAAA,eADH,EAELC,KAFK,CAECC,OAAO,CAACC,KAFT,CAjBJ;;AAAA;AAAA,oBAqBCG,MAAM,CAAC,CAAD,CAAN,IAAa,MAAKtB,KAAL,CAAWwB,QArBzB;AAAA;AAAA;AAAA;;AAsBEJ,cAAAA,WAAW,GAAG,IAAd;AAtBF;;AAAA;AAciBC,cAAAA,CAAC,EAdlB;AAAA;AAAA;;AAAA;AA2BN,kBAAGD,WAAH,EAAe;AACXF,gBAAAA,OAAO,CAACO,GAAR,CAAY,sDAAZ;AACAC,gBAAAA,KAAK,CAAC,mDAAD,CAAL;AACH,eAHD,MAGK;AACD;AACA,sBAAKnB,QAAL,CAAc;AACVoB,kBAAAA,UAAU,EAAG;AADH,iBAAd;AAGH;;AAnCK;AAAA;;AAAA;AAsCN;AACA,oBAAKpB,QAAL,CAAc;AACVoB,gBAAAA,UAAU,EAAG;AADH,eAAd;;AAvCM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAvBI;;AAAA,UAqElBC,UArEkB,GAqEL;AAAA,aAAM,MAAKrB,QAAL,CAAc;AAAEoB,QAAAA,UAAU,EAAG;AAAf,OAAd,CAAN;AAAA,KArEK;;AAEd,UAAKE,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAG,MAAK9B,KAAL,CAAW8B,YADjB;AAETxB,MAAAA,YAAY,EAAG,MAAKN,KAAL,CAAWM,YAFjB;AAGTqB,MAAAA,UAAU,EAAG,KAHJ;AAGW;AACpBzB,MAAAA,SAAS,EAAG;AAJH,KAAb;AAFc;AAQjB;;;;6BA+DO;AAAA;;AACJgB,MAAAA,OAAO,CAACO,GAAR,CAAY,eAAZ;AAEA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,SAAS,EAAE,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKzB,KAAL,CAAW8B,YAAX,CAAwBC,cAD3B,CADF,eAIE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAK/B,KAAL,CAAW8B,YAAX,CAAwBE,YAD3B,CAJF,eAOE,oBAAC,cAAD;AAAgB,QAAA,SAAS,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,eAQE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,kBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKhC,KAAL,CAAW8B,YAAX,CAAwBG,SAD3B,CARF,eAWE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,kBAAnC;AAAsD,QAAA,KAAK,EAAC,eAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKjC,KAAL,CAAW8B,YAAX,CAAwBI,IAAxB,CAA6BC,SAA7B,CAAuC,CAAvC,EAA0C,EAA1C,CADH,CAXF,CADJ,eAgBI,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAG;AAAd,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,IAAD;AACI,QAAA,SAAS,MADb;AAEI,QAAA,SAAS,EAAC,KAFd;AAGI,QAAA,OAAO,EAAC,QAHZ;AAII,QAAA,UAAU,EAAC,QAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKA,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,SAAS,EAAE,KAAKP,KAAL,CAAW3B,SAAX,GAAuB,MAAvB,GAAgC,MAJ7C;AAKE,QAAA,OAAO,EAAE,KAAKM,WALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALA,CADA,CAhBJ,CADJ,eAmCM,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AACM,QAAA,SAAS,EAAC,KADhB;AAEM,QAAA,OAAO,EAAC,QAFd;AAGM,QAAA,UAAU,EAAC,QAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AACI,2BAAgB,uBADpB;AAEI,4BAAiB,uBAFrB;AAGI,QAAA,IAAI,EAAE,KAAKqB,KAAL,CAAWF,UAHrB;AAII,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACpB,QAAL,CAAc;AAAEoB,YAAAA,UAAU,EAAG;AAAf,WAAd,CAAN;AAAA,SAJb;AAKI,QAAA,SAAS,EAAC,qBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOI,oBAAC,oBAAD;AACI,QAAA,YAAY,EAAE,KAAK3B,KAAL,CAAWM,YAD7B;AAEI,QAAA,aAAa,EAAE,KAAKN,KAAL,CAAWqC,aAF9B;AAGI,QAAA,QAAQ,EAAE,KAAKrC,KAAL,CAAWwB,QAHzB;AAII,QAAA,UAAU,EAAE,KAAKxB,KAAL,CAAWU,UAJ3B;AAKI,QAAA,UAAU,EAAE,KAAKkB,UALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CADJ,CAJF,CAnCN,CADJ;AA4DH;;;;EAxIqCvC,S;;SAArBU,Y","sourcesContent":["import React, { Component } from 'react';\nimport CandidateRequestForm from '../Candidate/CandidateRequestForm'\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AccountBalance from '@material-ui/icons/AccountBalance'\nimport Modal from '@material-ui/core/Modal';\nimport '../App.css';\n\nexport default class ElectionCard extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            electionData : this.props.electionData,\n            electionHash : this.props.electionHash,\n            isFormOpen : false, //flase it after debugging\n            isPresent : false\n        }\n    }\n\n    componentDidMount = () => {\n\n        let isPresent\n        \n        this.props.candidateRequestElection.forEach((election) => {\n            if(election === this.props.electionHash){\n                isPresent = true\n            }\n        })\n\n        this.setState({ isPresent })\n    }\n\n    openRequest = async() => {\n        //console.log(this.state.item);\n        const {contract} = this.props.userObject\n\n        //check whether the CAndidate is already nominated for this election or not\n        let length = 0\n        await contract.methods.countElectionCandidates(this.props.electionHash).call()\n        .then(res => length = res)\n        .catch(console.error)\n\n        if(length !== 0){\n\n            let userFounded = false\n\n            for(let i=0; i<length; i++){\n\n                let result\n                await contract.methods.getSelectedCandidates(this.props.electionHash, i).call()\n                .then(res => result = res)\n                .catch(console.error)\n\n                if(result[0] == this.props.username){\n                    userFounded = true\n                    break\n                }\n            }\n\n            if(userFounded){\n                console.log(\"this candidate is Already Nominated at this Election\")\n                alert(\"Sorry You are Already Nominated for this Election\")\n            }else{\n                //this.props.updateElectionState(true, this.state.electionHash)\n                this.setState({\n                    isFormOpen : true\n                })\n            }\n\n        }else{\n            // this.props.updateElectionState(true, this.state.electionHash)\n            this.setState({\n                isFormOpen : true\n            })\n        }\n   \n    }\n\n    updateForm = () => this.setState({ isFormOpen : false})\n\n    render(){\n        console.log(\"Election Card\")\n\n        return (\n            <div>\n                <Card className=\"RequestCard\" elevation={5}>\n                    <CardContent>\n                      <Typography varient=\"h4\">\n                        {this.props.electionData.typeOfElection}\n                      </Typography>\n                      <Typography className=\"RequestCardText2\">\n                        {this.props.electionData.constituency}\n                      </Typography>\n                      <AccountBalance className=\"ABIcon\" />\n                      <Typography varient=\"h4\" className=\"RequestCardText3\">\n                        {this.props.electionData.organizer}\n                      </Typography>\n                      <Typography varient=\"h6\" className=\"RequestCardText4\" color=\"textSecondary\">\n                        {this.props.electionData.FCRD.substring(0, 24)}\n                      </Typography>\n                    </CardContent>\n                    <CardActions style={{ marginTop : \"-13px\"}}>\n                    <Grid \n                        container \n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\" >\n                    <Button \n                      color=\"primary\" \n                      variant=\"outlined\" \n                      size=\"small\" \n                      className={this.state.isPresent ? \"hide\" : \"show\"}\n                      onClick={this.openRequest} \n                    >\n                      Request It\n                    </Button>\n                    </Grid>\n                  </CardActions>\n                </Card>\n                  <Grid container \n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\" >\n                    <Grid item xs={12}>\n                        <Modal\n                            aria-labelledby=\"Election-Request-Form\"\n                            aria-describedby=\"Election-Request-Form\"\n                            open={this.state.isFormOpen}\n                            onClose={() => this.setState({ isFormOpen : false })}\n                            className=\"ElectionRequestForm\"\n                        >\n                            <CandidateRequestForm \n                                electionHash={this.props.electionHash} \n                                candidateHash={this.props.candidateHash}\n                                username={this.props.username}\n                                userObject={this.props.userObject}\n                                updateForm={this.updateForm}\n                            />\n                        </Modal>\n                    </Grid>\n                </Grid>\n            </div>\n            )\n    }\n        \n    \n    \n}"]},"metadata":{},"sourceType":"module"}