{"ast":null,"code":"import _regeneratorRuntime from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/utkarsh/study2/proj/DigiVote/client/src/Voter/VotingArena.jsx\";\nimport React, { Component } from 'react';\nimport SingleCandidate from './SingleCandidate';\nimport { otpSender, otpVerifier } from '../utils/OtpGenrator';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport TouchApp from '@material-ui/icons/TouchApp';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport '../App.css';\n\nvar VoterArena = /*#__PURE__*/function (_Component) {\n  _inherits(VoterArena, _Component);\n\n  function VoterArena(props) {\n    var _this;\n\n    _classCallCheck(this, VoterArena);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VoterArena).call(this, props));\n\n    _this.componentWillMount = function () {\n      _this.setState({\n        loaderStart: true\n      });\n\n      var candidates = _this.props.selectedElection.candidates.filter(function (candidate) {\n        return candidate[2] === _this.props.AadhaarObject.Constituency;\n      });\n\n      candidates.push(_this.props.selectedElection.candidates[0]);\n\n      _this.setState({\n        candidates: candidates,\n        loaderStart: false\n      });\n\n      console.log(candidates);\n    };\n\n    _this.updateSelectedCandidate = function (selectedCandidate) {\n      _this.setState({\n        selectedCandidate: selectedCandidate\n      });\n    };\n\n    _this.voteIt = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loaderStart: true\n              });\n\n              console.log(_this.state.selectedCandidate); //sending an OTP to register mobile no.\n              //Promise for sending the OTP\n\n              _context.next = 4;\n              return otpSender(_this.props.AadhaarObject.Mobile, \"Digivote\").then(function (data) {\n                console.log(data);\n                console.log(\"OTP Sended Successfully\");\n\n                _this.setState({\n                  isOtpSended: true\n                });\n              }).catch(console.error);\n\n            case 4:\n              _this.setState({\n                OTPUnlock: true,\n                loaderStart: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.voteDone = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var length, i;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this.setState({\n                  loaderStart: true\n                });\n\n                event.preventDefault();\n                _context2.next = 4;\n                return otpVerifier(_this.props.AadhaarObject.Mobile, _this.state.OTP).then(function (data) {\n                  console.log(data);\n                  console.log(\"OTP Verified\");\n\n                  _this.setState({\n                    otpVerify: true\n                  });\n                }).catch(console.error);\n\n              case 4:\n                if (!_this.state.otpVerify) {\n                  _context2.next = 25;\n                  break;\n                }\n\n                _context2.next = 7;\n                return _this.props.userObject.contract.methods.addVoterToElection(_this.props.selectedElection.electionHash, _this.props.AadhaarHash).send({\n                  from: _this.props.userObject.accounts[2],\n                  gas: 6721975\n                }).then(function (result) {\n                  console.log(result);\n                  console.log(\"Voter Added to Election\");\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 7:\n                _context2.next = 9;\n                return _this.props.userObject.contract.methods.addAadhaar(_this.props.selectedElection.electionHash, _this.props.AadhaarObject.Aadhaar).send({\n                  from: _this.props.userObject.accounts[2],\n                  gas: 6721975\n                }).then(function (result) {\n                  console.log(result);\n                  console.log(\"VOter Aadhaar added to Election\");\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 9:\n                length = 0;\n                _context2.next = 12;\n                return _this.props.userObject.contract.methods.countElectionCandidates(_this.props.selectedElection.electionHash).call().then(function (res) {\n                  return length = res;\n                }).catch(console.error);\n\n              case 12:\n                i = 0;\n\n              case 13:\n                if (!(i < length)) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                _context2.next = 16;\n                return _this.props.userObject.contract.methods.voteSelectedCandidates(_this.props.selectedElection.electionHash, _this.state.selectedCandidate, i).send({\n                  from: _this.props.userObject.accounts[2],\n                  gas: 6721975\n                }).then(function (result) {\n                  console.log(result);\n                  console.log(\"VOter voted to the selected Candidate in election\");\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 16:\n                i++;\n                _context2.next = 13;\n                break;\n\n              case 19:\n                _this.setState({\n                  loaderStart: false\n                });\n\n                console.log(\"Voting Successfully\");\n                alert(\"Thank You Voting into the Election :)\");\n\n                _this.props.updateResetAll();\n\n                _context2.next = 28;\n                break;\n\n              case 25:\n                _this.setState({\n                  loaderStart: false\n                });\n\n                console.log(\"OTP is Invalid\");\n                alert(\"OTP is Invalid\");\n\n              case 28:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      candidates: null,\n      selectedCandidate: \"\",\n      OTPUnlock: false,\n      //this true value is for debugging, assign false after debugging\n      OTP: \"\",\n      otpVerify: true,\n      //this true value is for debugging, assign false after debugging\n      loaderStart: false\n    };\n    return _this;\n  }\n\n  _createClass(VoterArena, [{\n    key: \"updateOTP\",\n    value: function updateOTP(evt) {\n      this.setState({\n        OTP: evt.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(\"Voter's Arena\");\n      console.log(this.props.AadhaarObject);\n      console.log(this.props.selectedElection);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Fade, {\n        in: this.state.loaderStart === true,\n        unmountOnExit: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        className: \"loaderDiv1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CircularProgress, {\n        className: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-end\",\n        alignItems: \"center\",\n        style: {\n          height: \"100vh\",\n          width: \"100%\",\n          background: \"#4527a0\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 9,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        elevation: 2,\n        className: \"VotingArenaCard\",\n        style: {\n          background: \"#fff\",\n          margin: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 37\n        }\n      }, this.props.selectedElection.election.typeOfElection)), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"subtitle2\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 37\n        }\n      }, this.props.selectedElection.election.constituency))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        elevation: 5,\n        className: \"VotingArenaCardInner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        style: {\n          width: \"100%\",\n          height: \"200px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h6\",\n        style: {\n          color: \"#fff\"\n        },\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 41\n        }\n      }, \"Select The Candidate\")), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        style: {\n          padding: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 37\n        }\n      }, this.state.candidates.map(function (candidate, index) {\n        return /*#__PURE__*/React.createElement(SingleCandidate, {\n          key: index,\n          index: index,\n          candidate: candidate[0],\n          selectedCandidate: _this2.state.selectedCandidate,\n          updateSelectedCandidate: _this2.updateSelectedCandidate,\n          userObject: _this2.props.userObject,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 53\n          }\n        });\n      }))))))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }\n      }, this.state.OTPUnlock ? /*#__PURE__*/React.createElement(Paper, {\n        elevation: 2,\n        className: \"VoterCard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 49\n        }\n      }, \"Enter OTP\")), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        name: \"OTP\",\n        id: \"OTP\",\n        label: \"OTP\",\n        value: this.state.OTP,\n        onChange: function onChange(evt) {\n          return _this2.updateOTP(evt);\n        },\n        margin: \"normal\",\n        type: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          marginTop: \"30px\",\n          margin: \"5px\"\n        },\n        className: \"VoteDoneBtn\",\n        onClick: this.voteDone,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 49\n        }\n      }, \"Vote Done\")))) : /*#__PURE__*/React.createElement(Fab, {\n        color: \"primary\",\n        \"aria-label\": \"Touch\",\n        className: \"touchIcon\",\n        onClick: this.voteDone,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(TouchApp, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 41\n        }\n      })))));\n    }\n  }]);\n\n  return VoterArena;\n}(Component); //delete the VoteDo button and uncomment the above code , this thing is only done for debugging\n\n\nexport { VoterArena as default };","map":{"version":3,"sources":["/home/utkarsh/study2/proj/DigiVote/client/src/Voter/VotingArena.jsx"],"names":["React","Component","SingleCandidate","otpSender","otpVerifier","Paper","Grid","Button","Typography","TextField","Fab","TouchApp","Fade","CircularProgress","VoterArena","props","componentWillMount","setState","loaderStart","candidates","selectedElection","filter","candidate","AadhaarObject","Constituency","push","console","log","updateSelectedCandidate","selectedCandidate","voteIt","state","Mobile","then","data","isOtpSended","catch","error","OTPUnlock","voteDone","event","preventDefault","OTP","otpVerify","userObject","contract","methods","addVoterToElection","electionHash","AadhaarHash","send","from","accounts","gas","result","addAadhaar","Aadhaar","length","countElectionCandidates","call","res","i","voteSelectedCandidates","alert","updateResetAll","evt","target","value","height","width","background","margin","election","typeOfElection","constituency","color","padding","map","index","updateOTP","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SingleCandidate from './SingleCandidate';\nimport {otpSender, otpVerifier} from '../utils/OtpGenrator'\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport TouchApp from '@material-ui/icons/TouchApp';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport '../App.css';\n\nexport default class VoterArena extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            candidates : null,\n            selectedCandidate : \"\",\n            OTPUnlock : false, //this true value is for debugging, assign false after debugging\n            OTP : \"\",\n            otpVerify : true, //this true value is for debugging, assign false after debugging\n            loaderStart : false\n        }\n    }\n\n    componentWillMount = () => {\n\n        this.setState({ loaderStart : true })\n\n       let candidates =  this.props.selectedElection.candidates.filter((candidate) => {\n                            return (candidate[2] === this.props.AadhaarObject.Constituency)\n                        })\n\n            candidates.push(this.props.selectedElection.candidates[0])\n\n        this.setState({\n            candidates, loaderStart : false\n        })\n        console.log(candidates)\n    }\n\n    updateSelectedCandidate = (selectedCandidate) => {\n        this.setState({\n            selectedCandidate\n        })\n    }\n\n    voteIt = async() => {\n        this.setState({ loaderStart : true })\n        console.log(this.state.selectedCandidate)\n\n        //sending an OTP to register mobile no.\n        //Promise for sending the OTP\n         await otpSender(this.props.AadhaarObject.Mobile, \"Digivote\")\n         .then(data => {\n           console.log(data)\n           console.log(\"OTP Sended Successfully\")\n           this.setState({\n             isOtpSended : true\n           })\n         })\n         .catch(console.error)\n           \n         this.setState({\n             OTPUnlock : true, loaderStart : false\n         })\n\n    }\n\n    updateOTP(evt){               \n        this.setState({\n            OTP : evt.target.value\n        });\n    }\n\n    voteDone = async(event) => {\n        this.setState({ loaderStart : true })\n        event.preventDefault()\n\n        await otpVerifier(this.props.AadhaarObject.Mobile, this.state.OTP)\n        .then(data => {\n            console.log(data)\n            console.log(\"OTP Verified\")\n            this.setState({\n            otpVerify : true\n            })\n        })\n        .catch(console.error)\n\n        if(this.state.otpVerify){\n\n            await this.props.userObject.contract.methods.addVoterToElection(this.props.selectedElection.electionHash, this.props.AadhaarHash).send({from: this.props.userObject.accounts[2],gas:6721975})\n            .then((result) => {\n              console.log(result)\n              console.log(\"Voter Added to Election\")\n            })\n            .catch((error) => {\n              console.log(error)\n            })\n\n            await this.props.userObject.contract.methods.addAadhaar(this.props.selectedElection.electionHash, this.props.AadhaarObject.Aadhaar).send({from: this.props.userObject.accounts[2],gas:6721975})\n            .then((result) => {\n              console.log(result)\n              console.log(\"VOter Aadhaar added to Election\")\n            })\n            .catch((error) => {\n              console.log(error)\n            })\n\n            let length=0\n\n            await this.props.userObject.contract.methods.countElectionCandidates(this.props.selectedElection.electionHash).call()\n            .then(res => length = res)\n            .catch(console.error)\n\n            for(let i=0; i<length; i++){\n                \n                await this.props.userObject.contract.methods.voteSelectedCandidates(this.props.selectedElection.electionHash, this.state.selectedCandidate, i).send({from: this.props.userObject.accounts[2],gas:6721975})\n                .then((result) => {\n                console.log(result)\n                console.log(\"VOter voted to the selected Candidate in election\")\n                })\n                .catch((error) => {\n                console.log(error)\n                })\n\n            }\n            \n            this.setState({ loaderStart : false })\n            console.log(\"Voting Successfully\")\n            alert(\"Thank You Voting into the Election :)\")\n            this.props.updateResetAll()\n\n        }else{\n            this.setState({ loaderStart : false })\n            console.log(\"OTP is Invalid\")\n            alert(\"OTP is Invalid\")\n        }\n    }\n\n    render(){\n        console.log(\"Voter's Arena\")\n        console.log(this.props.AadhaarObject)\n        console.log(this.props.selectedElection)\n        return(\n            <div>\n                <Fade\n                    in={this.state.loaderStart === true}\n                    unmountOnExit\n                >\n                    <Grid \n                        container \n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        className=\"loaderDiv1\"\n                    >\n                        <CircularProgress className=\"loader\"/>\n                    </Grid>\n                </Fade>\n                <Grid \n                    container \n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    style={{ height : \"100vh\", width: \"100%\", background : \"#4527a0\"}}\n                >\n                    <Grid item xs={9}>\n                        <Paper \n                            elevation={2}\n                            className=\"VotingArenaCard\"\n                            style={{ background : \"#fff\" , margin : \"20px\"}}\n                        >\n                            <Grid container item xs={12}>\n                                <Grid item xs={12}>\n                                    <Typography variant=\"h5\" gutterBottom>{this.props.selectedElection.election.typeOfElection}</Typography>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Typography variant=\"subtitle2\" gutterBottom>{this.props.selectedElection.election.constituency}</Typography>\n                                </Grid>\n                            </Grid> \n                            <Grid \n                                container \n                                item \n                                xs={12}\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                            >\n                              <Paper \n                                elevation={5}\n                                className=\"VotingArenaCardInner\"\n                              >\n                                <Grid container style={{ width : \"100%\", height : \"200px\"}}>\n                                    <Grid item xs={12}>\n                                        <Typography variant=\"h6\" style={{ color : \"#fff\" }}gutterBottom>Select The Candidate</Typography>\n                                    </Grid>\n                                    <Grid container item xs={12} style={{ padding:\"15px\" }}>\n                                    {\n                                        this.state.candidates.map((candidate, index) =>\n                                                    <SingleCandidate \n                                                        key={index} \n                                                        index={index} \n                                                        candidate={candidate[0]} \n                                                        selectedCandidate={this.state.selectedCandidate}\n                                                        updateSelectedCandidate={this.updateSelectedCandidate}\n                                                        userObject={this.props.userObject}\n                                                    />    \n                                        )\n                                    }\n                                    </Grid>\n                                </Grid>\n                              </Paper>  \n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={3}>\n                        {\n                            this.state.OTPUnlock\n                                ? <Paper \n                                        elevation={2}\n                                        className=\"VoterCard\"\n                                    >\n                                        <Grid \n                                            container \n                                            direction=\"row\"\n                                            justify=\"center\"\n                                            alignItems=\"center\"\n                                        >\n                                            <Grid item xs={12}>\n                                                <Typography variant=\"h6\" gutterBottom>Enter OTP</Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    required\n                                                    name=\"OTP\"\n                                                    id=\"OTP\"\n                                                    label=\"OTP\"\n                                                    value={this.state.OTP}\n                                                    onChange={evt => this.updateOTP(evt)}\n                                                    margin=\"normal\"\n                                                    type=\"number\"\n                                                />\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <Button \n                                                    variant=\"contained\" \n                                                    color=\"primary\"\n                                                    style={{\n                                                    marginTop : \"30px\",\n                                                    margin:\"5px\"\n                                                    }} \n                                                    className=\"VoteDoneBtn\"\n                                                    onClick={this.voteDone}  \n                                                >Vote Done</Button>\n                                            </Grid> \n                                        </Grid>\n                                    </Paper>\n                                :   <Fab color=\"primary\" aria-label=\"Touch\" className=\"touchIcon\" onClick={this.voteDone}>\n                                        <TouchApp />\n                                    </Fab>\n                        }\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\n//delete the VoteDo button and uncomment the above code , this thing is only done for debugging"]},"metadata":{},"sourceType":"module"}