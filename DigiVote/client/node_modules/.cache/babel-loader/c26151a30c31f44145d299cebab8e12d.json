{"ast":null,"code":"import _regeneratorRuntime from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/utkarsh/study2/proj/DigiVote/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/utkarsh/study2/proj/DigiVote/client/src/Verification/OtpVerifier.jsx\";\nimport React, { Component } from 'react';\nimport VoterIDVerify from '../Verification/VoterIDVerify';\nimport { otpSender, otpVerifier } from '../utils/OtpGenrator';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nvar OtpVerifier = /*#__PURE__*/function (_Component) {\n  _inherits(OtpVerifier, _Component);\n\n  function OtpVerifier(props) {\n    var _this;\n\n    _classCallCheck(this, OtpVerifier);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OtpVerifier).call(this, props));\n\n    _this.sendIt = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault(); //checking the entered phone number is valid or not with fetched data\n\n                if (!(_this.state.lastFourDigit === _this.props.AadhaarObject.Mobile.substring(6, 10))) {\n                  _context.next = 7;\n                  break;\n                }\n\n                console.log(\"sending\"); //Promise for sending the OTP\n\n                _context.next = 5;\n                return otpSender(_this.props.AadhaarObject.Mobile, \"Digivote\").then(function (data) {\n                  console.log(data);\n                  console.log(\"OTP Sended Successfully\");\n\n                  _this.setState({\n                    isOtpSended: true\n                  });\n                }).catch(console.error);\n\n              case 5:\n                _context.next = 8;\n                break;\n\n              case 7:\n                console.log(\"Please enter the correct last four digit of your Phone number\");\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.verifyOtp = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return otpVerifier(_this.props.AadhaarObject.Mobile, _this.state.OTP).then(function (data) {\n                console.log(data);\n\n                _this.setState({\n                  otpVerify: true\n                });\n              }).catch(console.error);\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this.voterIdVerified = function () {\n      _this.props.updateVoterVerification();\n    };\n\n    _this.state = {\n      lastFourDigit: \"\",\n      OTP: \"\",\n      isOtpSended: false,\n      otpVerify: true // change it to false when you want to use OTP fucntionality\n\n    };\n    return _this;\n  }\n\n  _createClass(OtpVerifier, [{\n    key: \"updatelastFourDigit\",\n    //update the entered last4digit with the entered 4digit\n    value: function updatelastFourDigit(evt) {\n      this.setState({\n        lastFourDigit: evt.target.value\n      });\n    } //update the OTP entered by the voter\n\n  }, {\n    key: \"updateOTP\",\n    value: function updateOTP(evt) {\n      this.setState({\n        OTP: evt.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hide = {\n        display: 'none'\n      };\n      var show = {\n        display: 'block'\n      };\n      console.log(this.props.AadhaarObject);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      }, this.state.otpVerify ? /*#__PURE__*/React.createElement(VoterIDVerify, {\n        voterIdVerified: this.voterIdVerified,\n        voterId: this.props.AadhaarObject.VoterId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }) : /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        className: \"testClass\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        elevation: 2,\n        className: \"OTPCard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 23\n        }\n      }, \"Verify Authentication\")), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 23\n        }\n      }, !this.state.isOtpSended ? /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"subtitle2\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 35\n        }\n      }, \"Enter the last 4 Digit of your mobile number ********\", this.props.AadhaarObject.Mobile.substring(8, 10))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        name: \"LastFourDigit\",\n        id: \"LastFourDigit\",\n        label: \"LastFourDigit\",\n        value: this.state.lastFourDigit,\n        onChange: function onChange(evt) {\n          return _this2.updatelastFourDigit(evt);\n        },\n        margin: \"normal\",\n        type: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 35\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          marginTop: \"30px\",\n          margin: \"5px\"\n        },\n        onClick: this.sendIt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 35\n        }\n      }, \"Send OTP\"))) : /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"subtitle\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 35\n        }\n      }, \"Enter the OTP\")), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        name: \"OTP\",\n        id: \"OTP\",\n        label: \"OTP\",\n        value: this.state.OTP,\n        onChange: function onChange(evt) {\n          return _this2.updateOTP(evt);\n        },\n        margin: \"normal\",\n        type: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 35\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          marginTop: \"30px\",\n          margin: \"5px\"\n        },\n        onClick: this.verifyOtp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 35\n        }\n      }, \"Verify OTP\"))))))));\n    }\n  }]);\n\n  return OtpVerifier;\n}(Component);\n\nexport { OtpVerifier as default };","map":{"version":3,"sources":["/home/utkarsh/study2/proj/DigiVote/client/src/Verification/OtpVerifier.jsx"],"names":["React","Component","VoterIDVerify","otpSender","otpVerifier","Paper","Grid","TextField","Button","Typography","OtpVerifier","props","sendIt","event","preventDefault","state","lastFourDigit","AadhaarObject","Mobile","substring","console","log","then","data","setState","isOtpSended","catch","error","verifyOtp","OTP","otpVerify","voterIdVerified","updateVoterVerification","evt","target","value","hide","display","show","VoterId","updatelastFourDigit","marginTop","margin","updateOTP"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport VoterIDVerify from '../Verification/VoterIDVerify'\nimport {otpSender, otpVerifier} from '../utils/OtpGenrator'\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\nexport default class OtpVerifier extends Component {\n\n    constructor(props){\n      super(props)\n      this.state = {\n        lastFourDigit : \"\",\n        OTP : \"\",\n        isOtpSended : false,\n        otpVerify : true  // change it to false when you want to use OTP fucntionality\n      }\n    }\n\n    sendIt = async(event) => {\n\n        event.preventDefault();\n\n        //checking the entered phone number is valid or not with fetched data\n        if(this.state.lastFourDigit === this.props.AadhaarObject.Mobile.substring(6,10)){\n\n          console.log(\"sending\")\n\n          \n          //Promise for sending the OTP\n          await otpSender(this.props.AadhaarObject.Mobile, \"Digivote\")\n          .then(data => {\n            console.log(data)\n            console.log(\"OTP Sended Successfully\")\n            this.setState({\n              isOtpSended : true\n            })\n          })\n          .catch(console.error)\n            \n        }else{\n          console.log(\"Please enter the correct last four digit of your Phone number\")\n        }\n\n    }\n\n\n    verifyOtp = async() => {\n\n      //Promise for verify the entered OTP \n      await otpVerifier(this.props.AadhaarObject.Mobile, this.state.OTP)\n      .then(data => {\n        console.log(data)\n        this.setState({\n          otpVerify : true\n        })\n      })\n      .catch(console.error)\n    \n    }\n\n\n    voterIdVerified = () => {\n      this.props.updateVoterVerification()\n    }\n\n\n    //update the entered last4digit with the entered 4digit\n    updatelastFourDigit(evt){\n      this.setState({\n        lastFourDigit : evt.target.value\n      });\n    }\n\n\n    //update the OTP entered by the voter\n    updateOTP(evt){               \n      this.setState({\n        OTP : evt.target.value\n      });\n    }\n\n\n  render() {\n\n    let hide = {\n        display : 'none'\n    } \n\n    let show = {\n        display : 'block'\n    }\n\n    console.log(this.props.AadhaarObject)\n    return (\n      <div>\n        {\n          this.state.otpVerify\n            ? <VoterIDVerify \n                voterIdVerified={this.voterIdVerified}\n                voterId={this.props.AadhaarObject.VoterId}\n                />\n            : <Grid \n                  container \n                  direction=\"row\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  className=\"testClass\"\n              >\n                  <Paper \n                      elevation={2}\n                      className=\"OTPCard\"\n                  >\n                  <Grid \n                      container \n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                  >\n                      <Grid item xs={12}>\n                      <Typography variant=\"h4\" gutterBottom>Verify Authentication</Typography>\n                      </Grid>\n                      <Grid container\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"center\"\n                        >\n                        {\n                          !this.state.isOtpSended\n                            ? <Grid container\n                                  direction=\"row\"\n                                  justify=\"center\"\n                                  alignItems=\"center\"\n                              >\n                                <Grid item xs={12}>\n                                  <Typography variant=\"subtitle2\" gutterBottom>\n                                    Enter the last 4 Digit of your mobile number ********{this.props.AadhaarObject.Mobile.substring(8,10)}\n                                  </Typography>\n                                </Grid>\n                                <Grid item xs={12}>\n                                  <TextField\n                                      required\n                                      name=\"LastFourDigit\"\n                                      id=\"LastFourDigit\"\n                                      label=\"LastFourDigit\"\n                                      value={this.state.lastFourDigit}\n                                      onChange={evt => this.updatelastFourDigit(evt)}\n                                      margin=\"normal\"\n                                      type=\"number\"\n                                  />\n                                  </Grid>\n                                  <Grid item xs={12}>\n                                  <Button \n                                      variant=\"contained\" \n                                      color=\"primary\"\n                                      style={{\n                                      marginTop : \"30px\",\n                                      margin:\"5px\"\n                                      }} \n                                      onClick={this.sendIt}  \n                                  >Send OTP</Button>\n                                </Grid>\n                              </Grid>\n                            : <Grid container\n                                  direction=\"row\"\n                                  justify=\"center\"\n                                  alignItems=\"center\"\n                              >\n                                <Grid item xs={12}>\n                                  <Typography variant=\"subtitle\" gutterBottom>\n                                    Enter the OTP\n                                  </Typography>\n                                </Grid>\n                                <Grid item xs={12}>\n                                  <TextField\n                                      required\n                                      name=\"OTP\"\n                                      id=\"OTP\"\n                                      label=\"OTP\"\n                                      value={this.state.OTP}\n                                      onChange={evt => this.updateOTP(evt)}\n                                      margin=\"normal\"\n                                      type=\"number\"\n                                  />\n                                  </Grid>\n                                  <Grid item xs={12}>\n                                  <Button \n                                      variant=\"contained\" \n                                      color=\"primary\"\n                                      style={{\n                                      marginTop : \"30px\",\n                                      margin:\"5px\"\n                                      }} \n                                      onClick={this.verifyOtp}  \n                                  >Verify OTP</Button>\n                                </Grid>\n                              </Grid>\n                        }\n                      </Grid>\n                      </Grid>\n                  </Paper>\n              </Grid>\n        }     \n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}